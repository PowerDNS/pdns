---
global:
  skip-serde: true
  parameters:
    - name: "acl"
      type: "Vec<String>"
      default: "127.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 169.254.0.0/16, 192.168.0.0/16, 172.16.0.0/12, ::1/128, fc00::/7, fe80::/10"
      description: "CIDR netmasks of the clients allowed to send DNS queries"
    - name: "backends"
      type: "Vec<BackendConfiguration>"
      default: true
      description: "List of backends"
    - name: "binds"
      type: "Vec<BindConfiguration>"
      default: true
      description: "List of endpoints to accept queries on"
    - name: "cache_hit_response_rules"
      type: "Vec<ResponseRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed on a cache hit"
    - name: "cache_inserted_response_rules"
      type: "Vec<ResponseRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed after inserting a new response into the cache"
    - name: "cache_miss_rules"
      type: "Vec<QueryRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed after a cache miss"
    - name: "cache_settings"
      type: "CacheSettingsConfiguration"
      default: true
      description: "Caching-related settings"
    - name: "console"
      type: "ConsoleConfiguration"
      default: true
      description: "Console-related settings"
    - name: "dynamic_rules"
      type: "Vec<DynamicRulesConfiguration>"
      default: true
      description: "List of dynamic rules"
    - name: "dynamic_rules_settings"
      type: "DynamicRulesSettingsConfiguration"
      default: true
      description: "Dynamic rules-related settings"
    - name: "ebpf"
      type: "EbpfConfiguration"
      default: true
      description: "EBPF settings"
    - name: "edns_client_subnet"
      type: "EdnsClientSubnetConfiguration"
      default: true
      description: "EDNS Client Subnet-related settings"
    - name: "general"
      type: "GeneralConfiguration"
      default: true
      description: "General settings"
    - name: "key_value_stores"
      type: "KeyValueStoresConfiguration"
      default: true
      description: "Key-Value stores"
    - name: "load_balancing_policies"
      type: "LoadBalancingPoliciesConfiguration"
      default: true
      description: "Load-balancing policies"
    - name: "logging"
      type: "LoggingConfiguration"
      default: true
      description: "Logging settings"
    - name: "metrics"
      type: "MetricsConfiguration"
      default: true
      description: "Metrics-related settings"
    - name: "netmask_groups"
      type: "Vec<NetmaskGroupConfiguration>"
      default: true
      description: "Netmask groups definitions"
    - name: "packet_caches"
      type: "Vec<PacketCacheConfiguration>"
      default: true
      description: "Packet-cache definitions"
    - name: "pools"
      type: "Vec<PoolConfiguration>"
      default: true
      description: "Pools of backends"
    - name: "proxy_protocol"
      type: "ProxyProtocolConfiguration"
      default: true
      description: "Proxy-protocol-related settings"
    - name: "query_count"
      type: "QueryCountConfiguration"
      default: true
      description: "Queries counting-related settings"
    - name: "query_rules"
      type: "Vec<QueryRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed when a query is received"
    - name: "remote_logging"
      type: "RemoteLoggingConfiguration"
      default: true
      description: "Remote logging-related settings"
    - name: "response_rules"
      type: "Vec<ResponseRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed when a response is received"
    - name: "ring_buffers"
      type: "RingBuffersConfiguration"
      default: true
      description: "In-memory ring buffer settings"
    - name: "security_polling"
      type: "SecurityPollingConfiguration"
      default: true
      description: "Automatic checking of outdated version"
    - name: "selectors"
      type: "Vec<Selector>"
      default: true
      skip-serde: true
      description: "List of selectors that can be reused in rules"
    - name: "self_answered_response_rules"
      type: "Vec<ResponseRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed when a response is generated by DNSdist itself"
    - name: "snmp"
      type: "SnmpConfiguration"
      default: true
      description: "SNMP-related settings"
    - name: "tuning"
      type: "TuningConfiguration"
      default: true
      description: "Performance-related settings"
    - name: "webserver"
      type: "WebserverConfiguration"
      default: true
      description: "Internal web server configuration"
    - name: "xfr_response_rules"
      type: "Vec<ResponseRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed when a XFR response is received"
    - name: "xsk"
      type: "Vec<XskConfiguration>"
      default: true
      description: "List of AF_XDP / XSK objects"
    - name: "timeout_response_rules"
      type: "Vec<ResponseRuleConfiguration>"
      default: true
      skip-serde: true
      description: "List of rules executed when a timeout event triggered from timer expiration or network I/O error. Note that this rule is intent only for an action to restart a timed-out or network I/O failed query."

metrics:
  description: "Metrics-related settings"
  parameters:
    - name: "carbon"
      type: "Vec<CarbonConfiguration>"
      default: true
      description: "List of Carbon endpoints to send metrics to"

carbon:
  description: "Carbon endpoint to send metrics to"
  parameters:
    - name: "address"
      type: "String"
      description: "Indicates the IP address where the statistics should be sent"
    - name: "name"
      type: "String"
      default: ""
      description: "An optional string specifying the hostname that should be used. If left empty, the system hostname is used"
    - name: "interval"
      type: u32
      default: 30
      description: "An optional unsigned integer indicating the interval in seconds between exports"
    - name: "namespace"
      rename: "name_space"
      type: "String"
      default: ""
      description: "An optional string specifying the namespace name that should be used"
    - name: "instance"
      type: "String"
      default: ""
      description: "An optional string specifying the instance name that should be used"

remote_logging:
  description: "Queries and/or responses remote logging settings"
  parameters:
    - name: "protobuf_loggers"
      type: "Vec<ProtobufLoggerConfiguration>"
      default: true
      description: "List of endpoints to send queries and/or responses data to, using the native PowerDNS format"
    - name: "dnstap_loggers"
      type: "Vec<DnstapLoggerConfiguration>"
      default: true
      description: "List of endpoints to send queries and/or responses data to, using the dnstap format"

protobuf_logger:
  description: "Endpoint to send queries and/or responses data to, using the native PowerDNS format"
  parameters:
    - name: "name"
      type: "String"
      description: "Name of this endpoint"
    - name: "address"
      type: "String"
      description: "An IP:PORT combination where the logger is listening"
    - name: "timeout"
      type: "u16"
      default: 2
      description: "TCP connect timeout in seconds"
    - name: "max_queued_entries"
      type: "u64"
      default: 100
      description: "Queue this many messages before dropping new ones (e.g. when the remote listener closes the connection)"
    - name: "reconnect_wait_time"
      type: "u8"
      default: 1
      description: "Time in seconds between reconnection attempts"
    - name: "connection_count"
      type: "u64"
      default: 1
      description: "Number of connections to open to the endpoint"

dnstap_logger:
  description: "Endpoint to send queries and/or responses data to, using the dnstap format"
  parameters:
    - name: "name"
      type: "String"
      description: "Name of this endpoint"
    - name: "transport"
      type: "String"
      description: "The dnstap transport to use"
      supported-values:
        - "unix"
        - "tcp"
    - name: "address"
      type: "String"
      description: "The address of the endpoint. If the transport is set to 'unix', the address should be local ``AF_UNIX`` socket path. Note that most platforms have a rather short limit on the length. Otherwise, the address should be an IP:port"
    - name: "buffer_hint"
      type: "u64"
      default: 0
      description: "The threshold number of bytes to accumulate in the output buffer before forcing a buffer flush. According to the libfstrm library, the minimum is 1024, the maximum is 65536, and the default is 8192"
    - name: "flush_timeout"
      type: "u64"
      default: 0
      description: "The number of seconds to allow unflushed data to remain in the output buffer. According to the libfstrm library, the minimum is 1 second, the maximum is 600 seconds (10 minutes), and the default is 1 second"
    - name: "input_queue_size"
      type: "u64"
      default: 0
      description: "The number of queue entries to allocate for each input queue. This value must be a power of 2. According to the fstrm library, the minimum is 2, the maximum is 16384, and the default is 512"
    - name: "output_queue_size"
      type: "u64"
      default: 0
      description: "The number of queue entries to allocate for each output queue. According to the libfstrm library, the minimum is 2, the maximum is system-dependent and based on ``IOV_MAX``, and the default is 64"
    - name: "queue_notify_threshold"
      type: "u64"
      default: 0
      description: "The number of outstanding queue entries to allow on an input queue before waking the I/O thread. According to the libfstrm library, the minimum is 1 and the default is 32"
    - name: "reopen_interval"
      type: "u64"
      default: 0
      description: "The number of queue entries to allocate for each output queue. According to the libfstrm library, the minimum is 2, the maximum is system-dependent and based on IOV_MAX, and the default is 64"
    - name: "connection_count"
      type: "u64"
      default: 1
      description: "Number of connections to open to the endpoint"

proto_buf_meta:
  description: "Meta-data entry to be added to a Protocol Buffer message"
  parameters:
    - name: "key"
      type: "String"
      description: "Name of the meta entry"
    - name: "value"
      type: "String"
      description: "Value of the meta entry"

lmdb_kv_store:
  description: "LMDB-based key-value store"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this object"
    - name: "file_name"
      type: "String"
      description: "The path to an existing ``LMDB`` database created with ``MDB_NOSUBDIR``"
    - name: "database_name"
      type: "String"
      description: "The name of the database to use"
    - name: "no_lock"
      type: "bool"
      default: "false"
      description: "Whether to open the database with the ``MDB_NOLOCK`` flag"

cdb_kv_store:
  description: "CDB-based key-value store"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this object"
    - name: "file_name"
      type: "String"
      description: "The path to an existing CDB database"
    - name: "refresh_delay"
      type: "u32"
      description: "The delay in seconds between two checks of the database modification time. 0 means disabled"

kvs_lookup_key_source_ip:
  description: "Lookup key that can be used with :ref:`yaml-settings-KeyValueStoreLookupAction` or :ref:`yaml-settings-KeyValueStoreLookupSelector`, will return the source IP of the client in network byte-order"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this lookup key"
    - name: "v4_mask"
      type: "u8"
      default: "32"
      description: "Mask applied to IPv4 addresses. Default is 32 (the whole address)"
    - name: "v6_mask"
      type: "u8"
      default: "128"
      description: "Mask applied to IPv6 addresses. Default is 128 (the whole address)"
    - name: "include_port"
      type: "bool"
      default: "false"
      description: "Whether to append the port (in network byte-order) after the address"

kvs_lookup_key_qname:
  description: "Lookup key that can be used with :ref:`yaml-settings-KeyValueStoreLookupAction` or :ref:`yaml-settings-KeyValueStoreLookupSelector`, will return the qname of the query in DNS wire format"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this lookup key"
    - name: "wire_format"
      type: "bool"
      default: "true"
      description: "Whether to do the lookup in wire format (default) or in plain text"

kvs_lookup_key_suffix:
  description: |
    Lookup key that can be used with :ref:`yaml-settings-KeyValueStoreLookupAction` or :ref:`yaml-settings-KeyValueStoreLookupSelector`, will return a vector of keys based on the labels of the qname in DNS wire format or plain text. For example if the qname is sub.domain.powerdns.com. the following keys will be returned:

    - ``\\3sub\\6domain\\8powerdns\\3com\\0``
    - ``\\6domain\\8powerdns\\3com\\0``
    - ``\\8powerdns\\3com\\0``
    - ``\\3com\\0``
    - ``\\0``

    If ``min_labels`` is set to a value larger than ``0`` the lookup will only be done as long as there is at least ``min_labels`` labels remaining. Taking back our previous example, it means only the following keys will be returned if ``min_labels`` is set to ``2``:

    - ``\\3sub\\6domain\\8powerdns\\3com\\0``
    - ``\\6domain\\8powerdns\\3com\\0``
    - ``\\8powerdns\\3com\\0``

  parameters:
    - name: "name"
      type: "String"
      description: "The name of this lookup key"
    - name: "minimum_labels"
      type: "u16"
      default: "0"
      description: "The minimum number of labels to do a lookup for. Default is 0 which means unlimited"
    - name: "wire_format"
      type: "bool"
      default: "true"
      description: "Whether to do the lookup in wire format (default) or in plain text"

kvs_lookup_key_tag:
  description: "Lookup key that can be used with :ref:`yaml-settings-KeyValueStoreLookupAction` or :ref:`yaml-settings-KeyValueStoreLookupSelector`, will return the value of the corresponding tag for this query, if it exists"
  parameters:
    - name: "name"
      type: "String"
    - name: "tag"
      type: "String"

kvs_lookup_keys:
  description: "List of look keys that can be used with :ref:`yaml-settings-KeyValueStoreLookupAction` or :ref:`yaml-settings-KeyValueStoreLookupSelector`"
  parameters:
    - name: "source_ip_keys"
      type: "Vec<KvsLookupKeySourceIpConfiguration>"
      default: true
    - name: "qname_keys"
      type: "Vec<KvsLookupKeyQnameConfiguration>"
      default: true
    - name: "suffix_keys"
      type: "Vec<KvsLookupKeySuffixConfiguration>"
      default: true
    - name: "tag_keys"
      type: "Vec<KvsLookupKeyTagConfiguration>"
      default: true

key_value_stores:
  description: "List of key-value stores that can be used with :ref:`yaml-settings-KeyValueStoreLookupAction` or :ref:`yaml-settings-KeyValueStoreLookupSelector`"
  parameters:
    - name: "lmdb"
      type: "Vec<LmdbKvStoreConfiguration>"
      default: true
      description: "List of LMDB-based key-value stores"
    - name: "cdb"
      type: "Vec<CdbKvStoreConfiguration>"
      default: true
      description: "List of CDB-based key-value stores"
    - name: "lookup_keys"
      type: "KvsLookupKeysConfiguration"
      default: true
      description: "List of lookup keys"

webserver:
  parameters:
    - name: "listen_addresses"
      type: "Vec<String>"
      default: ""
      description: "IP addresses and ports to listen on"
    - name: "password"
      type: "String"
      default: ""
      description: "The password used to access the internal webserver. Since 1.7.0 the password should be hashed and salted via the ``hashPassword()`` command"
    - name: "api_key"
      type: "String"
      default: ""
      description: "The API Key (set to an empty string do disable it). Since 1.7.0 the key should be hashed and salted via the ``hashPassword()`` command"
    - name: "acl"
      type: "Vec<String>"
      default: "127.0.0.1, ::1"
      description: "List of network masks or IP addresses that are allowed to open a connection to the web server"
    - name: "api_requires_authentication"
      type: "bool"
      default: "true"
      description: "Whether access to the API (/api endpoints) requires a valid API key"
    - name: "stats_require_authentication"
      type: "bool"
      default: "true"
      description: "Whether access to the statistics (/metrics and /jsonstat endpoints) requires a valid password or API key"
    - name: "dashboard_requires_authentication"
      type: "bool"
      default: "true"
      description: "Whether access to the internal dashboard requires a valid password"
    - name: "max_concurrent_connections"
      type: "u32"
      default: 100
      description: "The maximum number of concurrent web connections, or 0 which means an unlimited number"
    - name: "hash_plaintext_credentials"
      type: "bool"
      default: "false"
      description: "Whether passwords and API keys provided in plaintext should be hashed during startup, to prevent the plaintext versions from staying in memory. Doing so increases significantly the cost of verifying credentials"
    - name: "custom_headers"
      type: "Vec<HttpCustomResponseHeaderConfiguration>"
      default: true
      description: "List of custom HTTP headers to set in our responses"
    - name: "api_configuration_directory"
      type: "String"
      default: ""
      description: "A valid directory where the configuration files will be written by the API"
    - name: "api_read_write"
      type: "bool"
      default: "false"
      description: "Allow modifications via the API. Optionally saving these changes to disk. Modifications done via the API will not be written to the configuration by default and will not persist after a reload"

console:
  description: "Console-related settings"
  parameters:
    - name: "listen_address"
      type: "String"
      default: ""
      description: "IP address and port to listen on for console connections"
    - name: "key"
      type: "String"
      default: ""
      description: "The shared secret used to secure connections between the console client and the server, generated via ``makeKey()``"
    - name: "acl"
      type: "Vec<String>"
      default: "127.0.0.1, ::1"
      description: "List of network masks or IP addresses that are allowed to open a connection to the console server"
    - name: "maximum_output_size"
      type: "u32"
      default: "10000000"
      lua-name: "setConsoleOutputMaxMsgSize"
      internal-field-name: "d_consoleOutputMsgMaxSize"
      runtime-configurable: true
      description: "Set the maximum size, in bytes, of a single console message"
    - name: "log_connections"
      type: "bool"
      default: "true"
      lua-name: "setConsoleConnectionsLogging"
      internal-field-name: "d_logConsoleConnections"
      runtime-configurable: true
      description: "Whether to log the opening and closing of console connections"
    - name: "max_concurrent_connections"
      type: "u64"
      default: "0"
      lua-name: "setConsoleMaximumConcurrentConnections"
      internal-field-name: "d_consoleMaxConcurrentConnections"
      runtime-configurable: false
      description: "Set the maximum number of concurrent console connection"

ebpf_map:
  description: "An ``eBPF`` map that is used to share data with kernel-land ``AF_XDP``/``XSK``, ``socket filter`` or ``XDP`` programs. Maps can be pinned to a filesystem path, which makes their content persistent across restarts and allows external programs to read their content and to add new entries. :program:`dnsdist` will try to load maps that are pinned to a filesystem path on startups, inheriting any existing entries, and fall back to creating them if they do not exist yet. Note that the user :program`dnsdist` is running under must have the right privileges to read and write to the given file, and to go through all the directories in the path leading to that file. The pinned path must be on a filesystem of type ``BPF``, usually below ``/sys/fs/bpf/``"
  parameters:
    - name: "max_entries"
      type: "u32"
      default: 0
      description: "Maximum number of entries in this map. 0 means no entry at all"
    - name: "pinned_path"
      type: "String"
      default: ""
      description: "The filesystem path this map should be pinned to"

ebpf:
  description: "``eBPF`` and ``XDP`` related settings"
  parameters:
    - name: "ipv4"
      type: "EbpfMapConfiguration"
      default: true
      description: "IPv4 map"
    - name: "ipv6"
      type: "EbpfMapConfiguration"
      default: true
      description: "IPv6 map"
    - name: "cidr_ipv4"
      type: "EbpfMapConfiguration"
      default: true
      description: "IPv4 subnets map"
    - name: "cidr_ipv6"
      type: "EbpfMapConfiguration"
      default: true
      description: "IPv6 subnets map"
    - name: "qnames"
      type: "EbpfMapConfiguration"
      default: true
      description: "DNS names map"
    - name: "external"
      type: "bool"
      default: "false"
      description: "If set to true, :program:`dnsdist` does not load the internal ``eBPF`` program. This is useful for ``AF_XDP`` and ``XDP`` maps"

edns_client_subnet:
  description: "EDNS Client Subnet-related settings"
  parameters:
    - name: "override_existing"
      lua-name: "setECSOverride"
      internal-field-name: "d_ecsOverride"
      runtime-configurable: true
      type: "bool"
      default: "false"
      description: "When ``useClientSubnet`` in :func:`newServer()` or ``use_client_subnet`` in :ref:`yaml-settings-BackendConfiguration` are set, and :program:`dnsdist` adds an EDNS Client Subnet Client option to the query, override an existing option already present in the query, if any. Please see Passing the source address to the backend for more information. Note that it’s not recommended to enable this option in front of an authoritative server responding with EDNS Client Subnet information as mismatching data (ECS scopes) can confuse clients and lead to SERVFAIL responses on downstream nameservers"
    - name: "source_prefix_v4"
      lua-name: "setECSSourcePrefixV4"
      internal-field-name: "d_ECSSourcePrefixV4"
      runtime-configurable: true
      type: "u8"
      default: 32
      description: "When ``useClientSubnet`` in :func:`newServer()` or ``use_client_subnet`` in :ref:`yaml-settings-BackendConfiguration` are set, and :program:`dnsdist` adds an EDNS Client Subnet Client option to the query, truncate the requestor's IPv4 address to this number of bits"
    - name: "source_prefix_v6"
      lua-name: "setECSSourcePrefixV6"
      internal-field-name: "d_ECSSourcePrefixV6"
      runtime-configurable: true
      type: "u8"
      default: 56
      description: "When ``useClientSubnet`` in :func:`newServer()` or ``use_client_subnet`` in :ref:`yaml-settings-BackendConfiguration` are set, and :program:`dnsdist` adds an EDNS Client Subnet Client option to the query, truncate the requestor's IPv6 address to this number of bits"

dynamic_rules_settings:
  description: "Dynamic rules-related settings"
  parameters:
    - name: "purge_interval"
      type: "u64"
      default: "60"
      lua-name: "setDynBlocksPurgeInterval"
      internal-field-name: "d_dynBlocksPurgeInterval"
      runtime-configurable: true
      description: "Set at which interval, in seconds, the expired dynamic blocks entries will be effectively removed from the tree. Entries are not applied anymore as soon as they expire, but they remain in the tree for a while for performance reasons. Removing them makes the addition of new entries faster and frees up the memory they use. Setting this value to 0 disables the purging mechanism, so entries will remain in the tree"
    - name: "default_action"
      type: "String"
      default: "Drop"
      description: "Set which action is performed when a query is blocked"
      supported-values:
        - Drop
        - NoOp
        - NoRecurse
        - NXDomain
        - Refused
        - Truncate

dynamic_rule:
  description: "Dynamic rule settings"
  changes:
    - version: 2.1.0
      content: "The ``rcode`` parameter used to be an unsigned integer and is now a string"
  parameters:
    - name: "type"
      rename: "rule_type"
      type: "String"
      description: "The type of this rule"
      supported-values:
        - "query-rate"
        - "rcode-rate"
        - "rcode-ratio"
        - "qtype-rate"
        - "cache-miss-ratio"
        - "response-byte-rate"
    - name: "seconds"
      type: "u32"
      description: "Number of seconds the rule has been exceeded"
    - name: "action_duration"
      type: "u32"
      description: "How long the action is going to be enforced"
    - name: "comment"
      type: "String"
      description: "Comment describing why the action why taken"
    - name: "rate"
      type: "u32"
      default: "0"
      description: "For ``query-rate``, ``rcode-rate``, ``qtype-rate`` and ``response-byte-rate``, the rate that should be exceeded"
    - name: "ratio"
      type: "f64"
      default: "0.0"
      description: "For ``rcode-ratio``, ``qtype-ratio`` and ``cache-miss-ratio``, the ratio that should be exceeded"
    - name: "action"
      type: "String"
      default: "drop"
      description: "The action that will be taken once the rate or ratio is exceeded"
      supported-values:
        - "Drop"
        - "NoNop"
        - "NoRecurse"
        - "NXDomain"
        - "SetTag"
        - "Truncate"
        - "Refused"
    - name: "warning_rate"
      type: "u32"
      default: "0"
      description: "For ``query-rate``, ``rcode-rate``, ``qtype-rate`` and ``response-byte-rate``, the rate that should be exceeded for a warning to be logged, but no action enforced"
    - name: "warning_ratio"
      type: "f64"
      default: "0.0"
      description: "For ``rcode-ratio`` and ``cache-miss-ratio``, the ratio that should be exceeded for a warning to be logged, but no action enforced"
    - name: "tag_name"
      type: "String"
      default: ""
      descripton: "If ``action`` is set to ``SetTag``, the name of the tag that will be set"
    - name: "tag_value"
      type: "String"
      default: "0"
      description: "If ``action`` is set to ``SetTag``, the value that will be set"
    - name: "visitor_function_name"
      type: "String"
      default: ""
      description: "For ``suffix-match`` and ``suffix-match-ffi``, the name of the Lua visitor function to call for each label of every domain seen in recent queries and responses"
    - name: "visitor_function_code"
      type: "String"
      default: ""
      description: "For ``suffix-match`` and ``suffix-match-ffi``, the code of Lua visitor function for each label of every domain seen in recent queries and responses"
    - name: "visitor_function_file"
      type: "String"
      default: ""
      description: "For ``suffix-match`` and ``suffix-match-ffi``, a path to a file containing the code of Lua visitor function for each label of every domain seen in recent queries and responses"
    - name: "rcode"
      type: "String"
      default: ""
      description: "For ``rcode-rate`` and ``rcode-ratio``, the response code to match"
    - name: "qtype"
      type: "String"
      default: ""
      description: "For ``qtype-rate``, the query type to match"
    - name: "minimum_number_of_responses"
      type: "u32"
      default: "0"
      description: "For ``cache-miss-ratio`` and ``rcode-ratio``, the minimum number of responses to have received for this rule to apply"
    - name: "minimum_global_cache_hit_ratio"
      type: "f64"
      default: "0.0"
      description: "The minimum global cache-hit ratio (over all pools, so ``cache-hits`` / (``cache-hits`` + ``cache-misses``)) for a ``cache-miss-ratio`` rule to be applied"

dynamic_rules:
  description: "Group of dynamic rules"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this group of dynamic rules"
    - name: "mask_ipv4"
      type: "u8"
      default: "32"
      description: "Number of bits to keep for IPv4 addresses"
    - name: "mask_ipv6"
      type: "u8"
      default: "64"
      description: "Number of bits to keep for IPv6 addresses. In some scenarios it might make sense to block a whole /64 IPv6 range instead of a single address, for example"
    - name: "mask_port"
      type: u8
      default: "0"
      description: "Number of bits of the port number to consider over IPv4, for CGNAT deployments. Default is 0 meaning that the port is not taken into account. For example passing ``2`` here, which only makes sense if the IPv4 parameter is set to ``32``, will split a given IPv4 address into four port ranges: ``0-16383``, ``16384-32767``, ``32768-49151`` and ``49152-65535``"
    - name: "exclude_ranges"
      type: "Vec<String>"
      default: ""
      description: "Exclude this list of ranges, meaning that no dynamic block will ever be inserted for clients in that range. Default to empty, meaning rules are applied to all ranges. When used in combination with ``include_ranges`` the more specific entry wins"
    - name: "include_ranges"
      type: "Vec<String>"
      default: ""
      description: "Include this list of ranges, meaning that dynamic rules will be inserted for clients in that range. When used in combination with ``exclude_ranges`` the more specific entry wins"
    - name: "exclude_domains"
      type: "Vec<String>"
      default: ""
      description: "Exclude this list of domains, meaning that no dynamic rules will ever be inserted for this domain via ``suffix-match`` or ``suffix-match-ffi`` rules. Default to empty, meaning rules are applied to all domains"
    - name: "rules"
      type: "Vec<DynamicRuleConfiguration>"
      description: "List of dynamic rules in this group"

ring_buffers:
  description: "Settings for in-memory ring buffers, that are used for live traffic inspection and dynamic rules"
  parameters:
    - name: "size"
      type: "u64"
      default: 10000
      description: "The maximum amount of queries to keep in the ringbuffer"
      lua-name: "setRingBuffersSize"
      internal-field-name: "d_ringsCapacity"
      runtime-configurable: false
    - name: "shards"
      type: "u64"
      default: 10
      description: "The number of shards to use to limit lock contention"
      lua-name: "setRingBuffersSize"
      internal-field-name: "d_ringsNumberOfShards"
      runtime-configurable: false
    - name: "lock_retries"
      type: "u64"
      default: 5
      description: "Set the number of shards to attempt to lock without blocking before giving up and simply blocking while waiting for the next shard to be available. Default to 5 if there is more than one shard, 0 otherwise"
      lua-name: "setRingBuffersOptions"
      internal-field-name: "d_ringsNbLockTries"
      runtime-configurable: false
    - name: "record_queries"
      type: "bool"
      default: "true"
      description: "Whether to record queries in the ring buffers"
      lua-name: "setRingBuffersOptions"
      internal-field-name: "d_ringsRecordQueries"
      runtime-configurable: false
    - name: "record_responses"
      type: "bool"
      default: "true"
      description: "Whether to record responses in the ring buffers"
      lua-name: "setRingBuffersOptions"
      internal-field-name: "d_ringsRecordResponses"
      runtime-configurable: false

incoming_tls_certificate_key_pair:
  description: "A pair of TLS certificate and key, with an optional associated password"
  parameters:
    - name: "certificate"
      type: "String"
      description: "A path to a file containing the certificate, in ``PEM``, ``DER`` or ``PKCS12`` format"
    - name: "key"
      type: "String"
      default: ""
      description: "A path to a file containing the key corresponding to the certificate, in ``PEM``, ``DER`` or ``PKCS12`` format"
    - name: "password"
      type: "String"
      default: ""
      description: "Password protecting the PKCS12 file if appropriate"

incoming_tls:
  description: "TLS parameters for frontends"
  parameters:
    - name: "provider"
      type: "String"
      default: "OpenSSL"
      description: ""
      supported-values:
        - "OpenSSL"
        - "GnuTLS"
    - name: "certificates"
      type: "Vec<IncomingTlsCertificateKeyPairConfiguration>"
      default: true
      description: "List of TLS certificates and their associated keys"
    - name: "ciphers"
      type: "String"
      default: ""
      description: "The TLS ciphers to use, in OpenSSL format. Note that ``ciphers_tls_13`` should be used for TLS 1.3"
    - name: "ciphers_tls_13"
      type: "String"
      default: ""
      description: "The TLS ciphers to use for TLS 1.3, in OpenSSL format"
    - name: "minimum_version"
      type: "String"
      default: "tls1.0"
      description: "The minimum version of the TLS protocol to support"
      supported-values:
        - "tls1.0"
        - "tls1.1"
        - "tls1.2"
        - "tls1.3"
    - name: "ticket_key_file"
      type: "String"
      default: ""
      description: "The path to a file from where TLS tickets keys should be loaded, to support :rfc:`5077`. These keys should be rotated often and never written to persistent storage to preserve forward secrecy. The default is to generate a random key. dnsdist supports several tickets keys to be able to decrypt existing sessions after the rotation. See :doc:`../advanced/tls-sessions-management` for more information"
    - name: "tickets_keys_rotation_delay"
      type: "u32"
      default: "43200"
      description: "Set the delay before the TLS tickets key is rotated, in seconds. Default is 43200 (12h). A value of 0 disables the automatic rotation, which might be useful when ``ticket_key_file`` is used"
    - name: "number_of_tickets_keys"
      type: "u32"
      default: "5"
      description: "The maximum number of tickets keys to keep in memory at the same time. Only one key is marked as active and used to encrypt new tickets while the remaining ones can still be used to decrypt existing tickets after a rotation"
    - name: "prefer_server_ciphers"
      type: "bool"
      default: "true"
      description: "Whether to prefer the order of ciphers set by the server instead of the one set by the client. Default is true, meaning that the order of the server is used. For OpenSSL >= 1.1.1, setting this option also enables the temporary re-prioritization of the ChaCha20-Poly1305 cipher if the client prioritizes it"
    - name: "session_timeout"
      type: "u32"
      default: "0"
      description: "Set the TLS session lifetime in seconds, this is used both for TLS ticket lifetime and for sessions kept in memory"
    - name: "session_tickets"
      type: "bool"
      default: "true"
      description: "Whether session resumption via session tickets is enabled. Default is true, meaning tickets are enabled"
    - name: "number_of_stored_sessions"
      type: "u32"
      default: "20480"
      description: "The maximum number of sessions kept in memory at the same time. Default is 20480. Setting this value to 0 disables stored session entirely"
    - name: "ocsp_response_files"
      type: "Vec<String>"
      default: ""
      description: "List of files containing OCSP responses, in the same order than the certificates and keys, that will be used to provide OCSP stapling responses"
    - name: "key_log_file"
      type: "String"
      default: ""
      description: "Write the TLS keys in the specified file so that an external program can decrypt TLS exchanges, in the format described in https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format. Note that this feature requires OpenSSL >= 1.1.1"
    - name: "release_buffers"
      type: "bool"
      default: "true"
      description: "Whether OpenSSL should release its I/O buffers when a connection goes idle, saving roughly 35 kB of memory per connection"
    - name: "enable_renegotiation"
      type: "bool"
      default: "false"
      description: "Whether secure TLS renegotiation should be enabled. Disabled by default since it increases the attack surface and is seldom used for DNS"
    - name: "async_mode"
      type: "bool"
      default: "false"
      description: "Whether to enable experimental asynchronous TLS I/O operations if the ``nghttp2`` library is used, ``OpenSSL`` is used as the TLS implementation and an asynchronous capable SSL engine (or provider) is loaded. See also :func:`loadTLSEngine` or :func:`loadTLSProvider` to load the engine (or provider)"
    - name: "ktls"
      type: "bool"
      default: "false"
      description: "Whether to enable the experimental kernel TLS support on Linux, if both the kernel and the OpenSSL library support it"
    - name: "read_ahead"
      type: "bool"
      default: "true"
      description: "When the TLS provider is set to OpenSSL, whether we tell the library to read as many input bytes as possible, which leads to better performance by reducing the number of syscalls"
    - name: "proxy_protocol_outside_tls"
      type: "bool"
      default: "false"
      description: "When the use of incoming proxy protocol is enabled, whether the payload is prepended after the start of the TLS session (so inside, meaning it is protected by the TLS layer providing encryption and authentication) or not (outside, meaning it is in clear-text). Default is false which means inside. Note that most third-party software like HAproxy expect the proxy protocol payload to be outside, in clear-text"
    - name: "ignore_configuration_errors"
      type: "bool"
      default: "false"
      description: "Ignore TLS configuration errors (such as invalid certificate path) and just issue a warning instead of aborting the whole process"

outgoing_tls:
  description: "TLS parameters for backends"
  parameters:
    - name: "provider"
      type: "String"
      default: "OpenSSL"
      description: ""
      supported-values:
        - "OpenSSL"
        - "GnuTLS"
    - name: "subject_name"
      type: "String"
      default: ""
      description: "The subject name passed in the SNI value of the TLS handshake, and against which to validate the certificate presented by the backend. Default is empty. If set this value supersedes any ``subject_addr`` one"
    - name: "subject_address"
      type: "String"
      default: ""
      description: "The subject IP address passed in the SNI value of the TLS handshake, and against which to validate the certificate presented by the backend"
    - name: "validate_certificate"
      type: "bool"
      default: "true"
      description: "Whether the certificate presented by the backend should be validated against the CA store (see ``ca_store``)"
    - name: "ca_store"
      type: "String"
      default: ""
      description: "Specifies the path to the CA certificate file, in PEM format, to use to check the certificate presented by the backend. Default is an empty string, which means to use the system CA store. Note that this directive is only used if ``validate_certificates`` is set"
    - name: "ciphers"
      type: "String"
      default: ""
      description: "The TLS ciphers to use. The exact format depends on the provider used. When the OpenSSL provider is used, ciphers for TLS 1.3 must be specified via ``ciphers_tls_13``"
    - name: "ciphers_tls_13"
      type: "String"
      default: ""
      description: "The ciphers to use for TLS 1.3, when the OpenSSL provider is used. When the GnuTLS provider is used, ``ciphers`` applies regardless of the TLS protocol and this setting is not used."
    - name: "key_log_file"
      type: "String"
      default: ""
      description: "Write the TLS keys in the specified file so that an external program can decrypt TLS exchanges, in the format described in https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format. Note that this feature requires OpenSSL >= 1.1.1"
    - name: "release_buffers"
      type: "bool"
      default: "true"
      description: "Whether OpenSSL should release its I/O buffers when a connection goes idle, saving roughly 35 kB of memory per connection"
    - name: "enable_renegotiation"
      type: "bool"
      default: "false"
      description: "Whether secure TLS renegotiation should be enabled. Disabled by default since it increases the attack surface and is seldom used for DNS"
    - name: "ktls"
      type: "bool"
      default: "false"
      description: "Whether to enable the experimental kernel TLS support on Linux, if both the kernel and the OpenSSL library support it. Default is false. Currently both DoT and DoH backend support this option"

http_custom_response_header:
  description: "List of custom HTTP headers"
  parameters:
    - name: "key"
      type: "String"
      description: "The key, or name, part of the header"
    - name: "value"
      type: "String"
      description: "The value part of the header"

http_responses_map:
  description: |
               An entry of an HTTP response map. Every query that matches the regular expression supplied in ``expression`` will be immediately answered with a HTTP response.
               The status of the HTTP response will be the one supplied by ``status``, and the content set to the one supplied by ``content``, except if the status is a redirection (3xx) in which case the content is expected to be the URL to redirect to.
  parameters:
    - name: "expression"
      type: "String"
      description: "A regular expression to match the path against"
    - name: "status"
      type: "u16"
      description: "The HTTP code to answer with"
    - name: "content"
      type: "String"
      description: "The content of the HTTP response, or a URL if the status is a redirection (3xx)"
    - name: "headers"
      type: "Vec<HttpCustomResponseHeaderConfiguration>"
      default: true
      description: "The custom headers to set for the HTTP response, if any. The default is to use the value of the ``custom_response_headers`` parameter of the frontend"

incoming_doh:
  description: "The DNS over HTTP(s) parameters of a frontend"
  parameters:
    - name: "provider"
      type: "String"
      default: "nghttp2"
      descripton: "Which underlying HTTP2 library should be used"
      supported-values:
        - "nghttp2"
        - "h2o"
    - name: "paths"
      type: "Vec<String>"
      default: "/dns-query"
      description: "The path part of a URL, or a list of paths, to accept queries on. Any query with a path matching exactly one of these will be treated as a DoH query (sub-paths can be accepted by setting the ``exact_path_matching`` setting to false)"
    - name: "idle_timeout"
      type: "u64"
      default: 30
      description: "Set the idle timeout, in seconds"
    - name: "server_tokens"
      type: "String"
      default: ""
      description: "The content of the Server: HTTP header returned by dnsdist. The default is ``h2o/dnsdist`` when ``h2o`` is used, ``nghttp2-<version>/dnsdist`` when ``nghttp2`` is"
    - name: "send_cache_control_headers"
      type: "bool"
      default: "true"
      description: "Whether to parse the response to find the lowest TTL and set a HTTP Cache-Control header accordingly"
    - name: "keep_incoming_headers"
      type: "bool"
      default: "false"
      description: "Whether to retain the incoming headers in memory, to be able to use :func:`HTTPHeaderRule` or :meth:`DNSQuestion.getHTTPHeaders`"
    - name: "trust_forwarded_for_header"
      type: "bool"
      default: "false"
      description: "Whether to parse any existing X-Forwarded-For header in the HTTP query and use the right-most value as the client source address and port, for ACL checks, rules, logging and so on"
    - name: "early_acl_drop"
      type: "bool"
      default: "true"
      description: "Whether to apply the ACL right when the connection is established, immediately dropping queries that are not allowed by the ACL (true), or later when a query is received, sending a HTTP 403 response when it is not allowed"
    - name: "exact_path_matching"
      type: "bool"
      default: "true"
      description: "Whether to do exact path matching of the query path against the paths configured in ``paths`` (true) or to accepts sub-paths (false)"
    - name: "internal_pipe_buffer_size"
      type: "u32"
      default: 1048576
      description: "Set the size in bytes of the internal buffer of the pipes used internally to pass queries and responses between threads. Requires support for ``F_SETPIPE_SZ`` which is present in Linux since 2.6.35. The actual size might be rounded up to a multiple of a page size. 0 means that the OS default size is used."
    - name: "custom_response_headers"
      type: "Vec<HttpCustomResponseHeaderConfiguration>"
      default: true
      description: "Set custom HTTP header(s) returned by dnsdist"
    - name: "responses_map"
      type: "Vec<HttpResponsesMapConfiguration>"
      default: true
      description: "Set a list of HTTP response rules allowing to intercept HTTP queries very early, before the DNS payload has been processed, and send custom responses including error pages, redirects and static content"

incoming_doq:
  description: "Settings for DNS over QUIC frontends"
  parameters:
    - name: "max_concurrent_queries_per_connection"
      type: "u64"
      default: 65535
      description: "Maximum number of in-flight queries on a single connection"

incoming_quic:
  description: "QUIC settings for DNS over QUIC and DNS over HTTP/3 frontends"
  parameters:
    - name: "idle_timeout"
      type: "u64"
      default: 5
      description: "Set the idle timeout, in seconds"
    - name: "congestion_control_algorithm"
      type: "String"
      default: "reno"
      description: "The congestion control algorithm to be used"
      supported-values:
        - "reno"
        - "cubic"
        - "bbr"
    - name: "internal_pipe_buffer_size"
      type: "u32"
      default: 1048576
      description: "Set the size in bytes of the internal buffer of the pipes used internally to pass queries and responses between threads. Requires support for ``F_SETPIPE_SZ`` which is present in Linux since 2.6.35. The actual size might be rounded up to a multiple of a page size. 0 means that the OS default size is used"

incoming_dnscrypt_certificate_key_pair:
  description: "Certificate and associated key for DNSCrypt frontends"
  parameters:
    - name: "certificate"
      type: "String"
      description: "The path to a DNSCrypt certificate file"
    - name: "key"
      type: "String"
      description: "The path to the private key file corresponding to the certificate, or a list of paths to such files, whose order should match the certFile(s) ones"

incoming_dnscrypt:
  description: "Settings for DNSCrypt frontends"
  parameters:
    - name: "provider_name"
      type: "String"
      default: ""
      description: "The DNSCrypt provider name for this frontend"
    - name: "certificates"
      type: "Vec<IncomingDnscryptCertificateKeyPairConfiguration>"
      default: true
      description: "List of certificates and associated keys"

outgoing_doh:
  description: "DNS over HTTPS specific settings for backends"
  parameters:
    - name: "path"
      type: "String"
      default: "/dns-query"
      description: "The HTTP path to send queries to"
    - name: "add_x_forwarded_headers"
      type: "bool"
      default: "false"
      description: "Whether to add X-Forwarded-For, X-Forwarded-Port and X-Forwarded-Proto headers to the backend"

incoming_tcp:
  description: "TCP-related settings for frontends"
  parameters:
    - name: "max_in_flight_queries"
      type: "u32"
      default: 0
      description: "Maximum number of in-flight queries over a single TCP connection. The default is 0, which disables out-of-order processing"
    - name: "listen_queue_size"
      type: "u32"
      default: 0
      description: "Set the size of the listen queue. Default is ``SOMAXCONN``"
    - name: "fast_open_queue_size"
      type: "u32"
      default: 0
      description: "Set the TCP Fast Open queue size, enabling TCP Fast Open when available and the value is larger than 0"
    - name: "max_concurrent_connections"
      type: "u32"
      default: 0
      description: "Maximum number of concurrent incoming TCP connections to this frontend. The default is 0 which means unlimited"

bind:
  description: "General settings for frontends"
  parameters:
    - name: "listen_address"
      type: "String"
      description: "Address and port to listen to"
    - name: "reuseport"
      type: "bool"
      default: "false"
      description: "Set the ``SO_REUSEPORT`` socket option, allowing several sockets to be listening on this address and port"
    - name: "protocol"
      type: "String"
      default: "Do53"
      description: "The DNS protocol for this frontend"
      supported-values:
        - "Do53"
        - "DoT"
        - "DoH"
        - "DoQ"
        - "DoH3"
        - "DNSCrypt"
    - name: "threads"
      type: "u32"
      default: "1"
      description: "Number of listening threads to create for this frontend. Note that each listening thread will have its own metrics, but identical DoT and DoH threads will share the same TLS Session Ticket Encryption Keys to improve session resumption rates. One side-effect is that rotating / altering the STEKs on all threads in a frontend group except the first one will be ignored, to prevent unwanted actions by existing code. :func:`reloadAllCertificates` properly handles frontend groups."
    - name: "interface"
      type: "String"
      default: ""
      description: "Set the network interface to use"
    - name: "cpus"
      type: "String"
      default: ""
      description: "Set the CPU affinity for this listener thread, asking the scheduler to run it on a single CPU id, or a set of CPU ids. This parameter is only available if the OS provides the ``pthread_setaffinity_np()`` function"
    - name: "enable_proxy_protocol"
      type: "bool"
      default: "true"
      description: "Whether to expect a proxy protocol v2 header in front of incoming queries coming from an address allowed by the ACL in :ref:`yaml-settings-ProxyProtocolConfiguration`. Default is ``true``, meaning that queries are expected to have a proxy protocol payload if they come from an address present in the proxy protocol ACL"
    - name: "tcp"
      type: "IncomingTcpConfiguration"
      default: true
      description: "TCP-specific settings"
    - name: "tls"
      type: "IncomingTlsConfiguration"
      default: true
      description: "TLS-specific settings"
    - name: "doh"
      type: "IncomingDohConfiguration"
      default: true
      description: "DNS over HTTPS-specific settings"
    - name: "doq"
      type: "IncomingDoqConfiguration"
      default: true
      description: "DNS over QUIC-specific settings"
    - name: "quic"
      type: "IncomingQuicConfiguration"
      default: true
      description: "QUIC-specific settings"
    - name: "dnscrypt"
      type: "IncomingDnscryptConfiguration"
      default: true
      description: "DNSCrypt-specific settings"
    - name: "additional_addresses"
      type: "Vec<String>"
      default: ""
      description: "List of additional addresses (with port) to listen on. Using this option instead of creating a new frontend for each address avoids the creation of new thread and Frontend objects, reducing the memory usage. The drawback is that there will be a single set of metrics for all addresses. This is only supported for DoT and DoH frontends, and therefore passing a non-empty list for other protocols will trigger an error"
    - name: "xsk"
      type: "String"
      default: ""
      description: "The name of an XSK sockets map to attach to this frontend, if any"

outgoing_tcp:
  description: "TCP-related settings for backends"
  parameters:
    - name: "retries"
      type: "u16"
      default: 5
      description: "The number of TCP connection attempts to the backend, for a given query"
    - name: "connect_timeout"
      type: "u16"
      default: 5
      description: "The timeout (in seconds) of a TCP connection attempt"
    - name: "send_timeout"
      type: "u16"
      default: 30
      description: "The timeout (in seconds) of a TCP write attempt"
    - name: "receive_timeout"
      type: "u16"
      default: 30
      description: "The timeout (in seconds) of a TCP read attempt"
    - name: "fast_open"
      type: "bool"
      default: "false"
      description: "Whether to enable TCP Fast Open"

proxy_protocol_value:
  description: "A proxy protocol Type-Length Value entry"
  parameters:
    - name: "key"
      type: "u8"
      description: "The type of the proxy protocol entry"
    - name: "value"
      type: "String"
      description: "The value of the proxy protocol entry"

lazy_health_check:
  description: "Lazy health-check related settings for backends"
  parameters:
    - name: "interval"
      type: "u16"
      default: 30
      description: "The interval, in seconds, between health-check queries in 'lazy' mode. Note that when ``use_exponential_back_off`` is set to true, the interval doubles between every queries. These queries are only sent when a threshold of failing regular queries has been reached, and until the backend is available again"
    - name: "min_sample_count"
      type: "u16"
      default: 1
      description: "The minimum amount of regular queries that should have been recorded before the ``threshold`` threshold can be applied"
    - name: "mode"
      type: "String"
      default: "TimeoutOrServFail"
      description: "The 'lazy' health-check mode: ``TimeoutOnly`` means that only timeout and I/O errors of regular queries will be considered for the ``threshold``, while ``TimeoutOrServFail`` will also consider ``Server Failure`` answers"
      supported-values:
        - "TimeoutOnly"
        - "TimeoutOrServFail"
    - name: "sample_size"
      type: "u16"
      default: 100
      description: "The maximum size of the sample of queries to record and consider for the ``threshold``. Default is 100, which means the result (failure or success) of the last 100 queries will be considered"
    - name: "threshold"
      type: "u16"
      default: 20
      description: "The threshold, as a percentage, of queries that should fail for the 'lazy' health-check to be triggered. The default is 20 which means 20% of the last ``sample_size`` queries should fail for a health-check to be triggered"
    - name: "use_exponential_back_off"
      type: "bool"
      default: "false"
      description: "Whether the 'lazy' health-check should use an exponential back-off instead of a fixed value, between health-check probes. The default is false which means that after a backend has been moved to the ``down`` state health-check probes are sent every ``interval`` seconds. When set to true, the delay between each probe starts at ``interval`` seconds and doubles between every probe, capped at ``max_back_off`` seconds"
    - name: "max_back_off"
      type: "u16"
      default: 3600
      description: "This value, in seconds, caps the time between two health-check queries when ``use_exponential_back_off`` is set to true. The default is 3600 which means that at most one hour will pass between two health-check queries"

health_check:
  description: "Health-checks related settings for backends"
  parameters:
    - name: "mode"
      type: "String"
      default: "auto"
      description: "The health-check mode to use: 'auto' which sends health-check queries every ``check_interval`` seconds, 'up' which considers that the backend is always available, 'down' that it is always not available, and 'lazy' which only sends health-check queries after a configurable amount of regular queries have failed (see :ref:`yaml-settings-LazyHealthCheckConfiguration` for more information). Default is 'auto'. See :ref:`Healthcheck` for a more detailed explanation"
      supported-values:
        - "auto"
        - "down"
        - "lazy"
        - "up"
    - name: "qname"
      type: "String"
      default: ""
      description: "The DNS name to use as QNAME in health-check queries"
    - name: "qclass"
      type: "String"
      default: "IN"
      description: "The DNS class to use in health-check queries"
    - name: "qtype"
      type: "String"
      default: "A"
      description: "The DNS type to use in health-check queries"
    - name: "function"
      type: "String"
      default: ""
      description: "The name of an optional Lua function to call to dynamically set the QNAME, QTYPE and QCLASS to use in the health-check query (see :ref:`Healthcheck`)"
    - name: "lua"
      type: "String"
      default: ""
      description: "The code of an optional Lua function to call to dynamically set the QNAME, QTYPE and QCLASS to use in the health-check query (see :ref:`Healthcheck`)"
    - name: "lua_file"
      type: "String"
      default: ""
      description: "A path to a file containing the code of an optional Lua function to call to dynamically set the QNAME, QTYPE and QCLASS to use in the health-check query (see :ref:`Healthcheck`)"
    - name: "timeout"
      type: "u16"
      default: 1000
      description: "The timeout (in milliseconds) of a health-check query, default: 1000 (1s)"
    - name: "set_cd"
      type: "bool"
      default: "false"
      description: "Set the CD (Checking Disabled) flag in the health-check query"
    - name: "max_failures"
      type: "u8"
      default: "1"
      description: "Allow this many check failures before declaring the backend down"
    - name: "rise"
      type: "u8"
      default: "1"
      description: "Require ``number`` consecutive successful checks before declaring the backend up"
    - name: "interval"
      type: "u32"
      default: "1"
      description: "The time in seconds between health checks"
    - name: "must_resolve"
      type: "bool"
      default: "false"
      description: "Set to true when the health check MUST return a RCODE different from NXDomain, ServFail and Refused. Default is false, meaning that every RCODE except ServFail is considered valid"
    - name: "use_tcp"
      type: "bool"
      default: "false"
      description: "Whether to do healthcheck queries over TCP, instead of UDP. Always enabled for TCP-only, DNS over TLS and DNS over HTTPS backends"
    - name: "lazy"
      type: "LazyHealthCheckConfiguration"
      default: true
      description: "Settings for lazy health-checks"

outgoing_auto_upgrade:
  description: "Setting for the automatically upgraded backend to a more secure version of the DNS protocol"
  parameters:
    - name: "enabled"
      type: "bool"
      default: "false"
      description: "Whether to use the 'Discovery of Designated Resolvers' mechanism to automatically upgrade a Do53 backend to DoT or DoH, depending on the priorities present in the SVCB record returned by the backend"
    - name: "interval"
      type: "u32"
      default: "3600"
      description: "If ``enabled`` is set, how often to check if an upgrade is available, in seconds"
    - name: "keep"
      type: "bool"
      default: "false"
      description: "If ``enabled`` is set, whether to keep the existing Do53 backend around after an upgrade. Default is false which means the Do53 backend will be replaced by the upgraded one"
    - name: "pool"
      type: "String"
      default: ""
      description: "If ``enabled`` is set, in which pool to place the newly upgraded backend. Default is empty which means the backend is placed in the default pool"
    - name: "doh_key"
      type: "u8"
      default: "7"
      description: "If ``enabled`` is set, the value to use for the SVC key corresponding to the DoH path. Default is 7"
    - name: "use_lazy_health_check"
      type: "bool"
      default: "false"
      description: "Whether the auto-upgraded version of this backend should use the lazy health-checking mode. Default is false, which means it will use the regular health-checking mode"

backend:
  description: "Generic settings for backends"
  parameters:
    - name: "address"
      type: "String"
      description: "``ip``:``port`` of the backend server (if unset, port defaults to 53 for Do53 backends, 853 for DoT and DoQ, and 443 for DoH and DoH3 ones"
    - name: "id"
      type: "String"
      default: ""
      description: "Use a pre-defined UUID instead of a random one"
    - name: "name"
      type: "String"
      default: ""
      description: "The name associated to this backend, for display purpose"
    - name: "protocol"
      type: "String"
      description: "The DNS protocol to use to contact this backend"
      supported-values:
        - "Do53"
        - "DoT"
        - "DoH"
    - name: "tls"
      type: "OutgoingTlsConfiguration"
      default: true
      description: "TLS-related settings for DoT and DoH backends"
    - name: "doh"
      type: "OutgoingDohConfiguration"
      default: true
      description: "DoH-related settings for DoH backends"
    - name: "use_client_subnet"
      type: "bool"
      default: "false"
      description: "Whether to add (or override, see :ref:`yaml-settings-EdnsClientSubnetConfiguration`) an EDNS Client Subnet to the DNS payload before forwarding it to the backend. Please see :doc:`../advanced/passing-source-address` for more information"
    - name: "use_proxy_protocol"
      type: "bool"
      default: "false"
      description: "Add a proxy protocol header to the query, passing along the client's IP address and port along with the original destination address and port"
    - name: "queries_per_second"
      type: "u32"
      default: 0
      description: "Limit the number of queries per second to ``number``, when using the ``firstAvailable`` policy"
    - name: "order"
      type: "u32"
      default: 1
      description: "The order of this server, used by the `leastOutstanding` and `firstAvailable` policies"
    - name: "weight"
      type: "u32"
      default: 1
      description: "The weight of this server, used by the `wrandom`, `whashed`, `chashed` and `orderedWrandUntag` policies, default: 1. Supported values are a minimum of 1, and a maximum of 2147483647"
    - name: "udp_timeout"
      type: "u8"
      default: 0
      description: "The udp backend query timeout value in seconds, default: 0. Supported values are a minimum of 1, and a maximum of 255. Value greater than 0 will override global UDP timeout setting"
    - name: "pools"
      type: "Vec<String>"
      default: ""
      description: "List of pools to place this backend into. By default a server is placed in the default (\"\") pool"
    - name: "tcp"
      type: "OutgoingTcpConfiguration"
      default: true
      description: "TCP-related settings for a backend"
    - name: "ip_bind_addr_no_port"
      type: "bool"
      default: "true"
      description: "Whether to enable ``IP_BIND_ADDRESS_NO_PORT`` if available"
    - name: "health_checks"
      type: "HealthCheckConfiguration"
      default: true
      description: "Health-check settings"
    - name: "source"
      type: "String"
      default: ""
      description: |
                   The source address or interface to use for queries to this backend, by default this is left to the kernel's address selection.
                     The following formats are supported:

                     - address, e.g. ``""192.0.2.2""``
                     - interface name, e.g. ``""eth0""``
                     - address@interface, e.g. ``""192.0.2.2@eth0""``

    - name: "sockets"
      type: "u32"
      default: "1"
      description: "Number of UDP sockets (and thus source ports) used toward the backend server, defaults to a single one. Note that for backends which are multithreaded, this setting will have an effect on the number of cores that will be used to process traffic from dnsdist. For example you may want to set ``sockets`` to a number somewhat greater than the number of worker threads configured in the backend, particularly if the Linux kernel is being used to distribute traffic to multiple threads listening on the same socket (via ``reuseport``). See also ``randomize_outgoing_sockets_to_backend`` in :ref:`yaml-settings-UdpTuningConfiguration`"
    - name: "disable_zero_scope"
      type: "bool"
      default: "false"
      description: "Disable the EDNS Client Subnet :doc:`../advanced/zero-scope` feature, which does a cache lookup for an answer valid for all subnets (ECS scope of 0) before adding ECS information to the query and doing the regular lookup. Default is false. This requires the ``parse_ecs`` option of the corresponding cache to be set to true"
    - name: "reconnect_on_up"
      type: "bool"
      default: "false"
      description: "Close and reopen the sockets when a server transits from Down to Up. This helps when an interface is missing when dnsdist is started"
    - name: "max_in_flight"
      type: "u32"
      default: "1"
      description: "Maximum number of in-flight queries. The default is 0, which disables out-of-order processing. It should only be enabled if the backend does support out-of-order processing. Out-of-order processing needs to be enabled on the frontend as well"
    - name: "tcp_only"
      type: "bool"
      default: "false"
      description: "Always forward queries to that backend over TCP, never over UDP. Always enabled for TLS backends"
    - name: "auto_upgrade"
      type: "OutgoingAutoUpgradeConfiguration"
      default: true
      description: "Auto-upgrade related settings"
    - name: "max_concurrent_tcp_connections"
      type: "u32"
      default: 0
      description: "Maximum number of TCP connections to that backend. When that limit is reached, queries routed to that backend that cannot be forwarded over an existing connection will be dropped. Default is 0 which means no limit"
    - name: "proxy_protocol_advertise_tls"
      type: "bool"
      default: "false"
      description: "Whether to set the SSL Proxy Protocol TLV in the proxy protocol payload sent to the backend if the query was received over an encrypted channel (DNSCrypt, DoQ, DoH or DoT). Requires ``use_proxy_protocol``"
    - name: "mac_address"
      type: "String"
      default: ""
      description: "When the ``xsk`` option is set, this parameter can be used to specify the destination MAC address to use to reach the backend. If this options is not specified, dnsdist will try to get it from the IP of the backend by looking into the system's MAC address table, but it will fail if the corresponding MAC address is not present"
    - name: "cpus"
      type: "String"
      default: ""
      description: "Set the CPU affinity for this thread, asking the scheduler to run it on a single CPU id, or a set of CPU ids. This parameter is only available if the OS provides the ``pthread_setaffinity_np()`` function"
    - name: "xsk"
      type: "String"
      default: ""
      description: "The name of an XSK sockets map to attach to this frontend, if any"
    - name: "dscp"
      type: "u8"
      default: 0
      description: "The DSCP marking value to be applied. Range 0-63. Default is 0 which means no action for DSCP marking"

tuning:
  description: "Tuning settings"
  parameters:
    - name: "doh"
      type: "DohTuningConfiguration"
      default: true
      description: "DoH-related tuning settings"
    - name: "tcp"
      type: "TcpTuningConfiguration"
      default: true
      description: "TCP-related tuning settings"
    - name: "tls"
      type: "TlsTuningConfiguration"
      description: "TLS-related tuning settings"
      default: true
    - name: "udp"
      type: "UdpTuningConfiguration"
      default: true
      description: "UDP-related tuning settings"

tcp_tuning:
  category: "tuning.tcp"
  parameters:
    - name: "worker_threads"
      type: "u32"
      default: 10
      lua-name: "setMaxTCPClientThreads"
      internal-field-name: "d_maxTCPClientThreads"
      runtime-configurable: false
    - name: "receive_timeout"
      type: "u32"
      default: 2
      lua-name: "setTCPRecvTimeout"
      internal-field-name: "d_tcpRecvTimeout"
      runtime-configurable: true
    - name: "send_timeout"
      type: "u32"
      default: 2
      lua-name: "setTCPSendTimeout"
      internal-field-name: "d_tcpSendTimeout"
      runtime-configurable: true
    - name: "max_queries_per_connection"
      type: "u64"
      default: "0"
      lua-name: "setMaxTCPQueriesPerConnection"
      internal-field-name: "d_maxTCPQueriesPerConn"
      runtime-configurable: true
    - name: "max_connection_duration"
      type: "u64"
      default: "0"
      lua-name: "setMaxTCPConnectionDuration"
      internal-field-name: "d_maxTCPConnectionDuration"
      runtime-configurable: true
    - name: "max_queued_connections"
      type: "u64"
      default: "10000"
      lua-name: "setMaxTCPQueuedConnections"
      internal-field-name: "d_maxTCPQueuedConnections"
      runtime-configurable: false
    - name: "internal_pipe_buffer_size"
      type: "u32"
      default: 1048576
      lua-name: "setTCPInternalPipeBufferSize"
      internal-field-name: "d_tcpInternalPipeBufferSize"
      runtime-configurable: false
    - name: "outgoing_max_idle_time"
      type: "u64"
      default: 300
      lua-name: "setTCPDownstreamMaxIdleTime"
      internal-field-name: "d_outgoingTCPMaxIdleTime"
      runtime-configurable: false
    - name: "outgoing_cleanup_interval"
      type: "u64"
      default: 60
      lua-name: "setTCPDownstreamCleanupInterval"
      internal-field-name: "d_outgoingTCPCleanupInterval"
      runtime-configurable: false
    - name: "outgoing_max_idle_connection_per_backend"
      type: "u64"
      default: 10
      lua-name: "setMaxCachedTCPConnectionsPerDownstream"
      internal-field-name: "d_outgoingTCPMaxIdlePerBackend"
      runtime-configurable: false
    - name: "max_connections_per_client"
      type: "u32"
      default: 0
      lua-name: "setMaxTCPConnectionsPerClient"
      internal-field-name: "d_maxTCPConnectionsPerClient"
      runtime-configurable: false
    - name: "fast_open_key"
      type: "String"
      default: ""
      lua-name: "setTCPFastOpenKey"
      runtime-configurable: false
    - name: "connections_overload_threshold"
      type: "u8"
      default: "90"
      lua-name: "setTCPConnectionsOverloadThreshold"
      internal-field-name: "d_tcpConnectionsOverloadThreshold"
      runtime-configurable: false
      description: "Set a threshold as a percentage to the maximum number of incoming TCP connections per frontend or per client. When this threshold is reached, new incoming TCP connections are restricted: only query per connection is allowed (no out-of-order processing, no idle time allowed), the receive timeout is reduced to 500 milliseconds and the total duration of the TCP connection is limited to 5 seconds"
    - name: "max_connection_rate_per_client"
      type: "u64"
      default: "0"
      lua-name: "setMaxTCPConnectionRatePerClient"
      internal-field-name: "d_maxTCPConnectionsRatePerClient"
      runtime-configurable: false
      description: "Set the maximum number of new TCP connections that a given client (see ``connections_mask_v4``, ``connections_mask_v6`` and ``connection_mask_v4_port`` to see how clients can be aggregated) can open, per second, over the last ``connection_rate_interval`` minutes. Clients exceeding this rate will not be able to open new TCP connections for ``ban_duration_for_exceeding_tcp_tls_rate`` seconds. See also ``max_tls_new_session_rate_per_client`` and ``max_tls_resumed_session_rate_per_client``"
    - name: "connection_rate_interval"
      type: "u64"
      default: "5"
      lua-name: "setTCPConnectionRateInterval"
      internal-field-name: "d_tcpConnectionsRatePerClientInterval"
      runtime-configurable: false
      description: "Set the interval, in minutes, over which new TCP and TLS per client connection rates are computed (see ``max_connection_rate_per_client``, ``max_tls_new_session_rate_per_client`` and ``max_tls_resumed_session_rate_per_client``)"
    - name: "max_tls_new_session_rate_per_client"
      type: "u64"
      default: "0"
      lua-name: "setMaxTLSNewSessionRatePerClient"
      internal-field-name: "d_maxTLSNewSessionsRatePerClient"
      runtime-configurable: false
      description: "Set the maximum number of new TLS sessions, without resumption, that a given client (see ``connections_mask_v4``, ``connections_mask_v6`` and ``connection_mask_v4_port`` to see how clients can be aggregated) can open, per second, over the last ``connection_rate_interval`` minutes. Clients exceeding this rate will not be able to open new TCP connections for ``ban_duration_for_exceeding_tcp_tls_rate`` seconds. See also ``max_connection_rate_per_client`` and ``max_tls_resumed_session_rate_per_client``"
    - name: "max_tls_resumed_session_rate_per_client"
      type: "u64"
      default: "0"
      lua-name: "setMaxTLSResumedSessionRatePerClient"
      internal-field-name: "d_maxTLSResumedSessionsRatePerClient"
      runtime-configurable: false
      description: "Set the maximum number of resumed TLS sessions that a given client (see ``connections_mask_v4``, ``connections_mask_v6`` and ``connection_mask_v4_port`` to see how clients can be aggregated) can open, per second, over the last ``connection_rate_interval`` minutes. Clients exceeding this rate will not be able to open new TCP connections for ``ban_duration_for_exceeding_tcp_tls_rate`` seconds. See also ``max_connection_rate_per_client`` and ``max_tls_new_session_rate_per_client``"
    - name: "max_read_ios_per_query"
      type: "u32"
      default: "50"
      lua-name: "setMaxTCPReadIOsPerQuery"
      internal-field-name: "d_maxTCPReadIOsPerQuery"
      runtime-configurable: false
      description: "Set the maximum number of read events needed to receive a new query on a TCP connection. Usually reading a DNS query over a TCP connection requires two read events, one to read the query size and one to read the query itself. For large queries, on congested networks, a few short reads might occur, increasing the number of read operations needed to read the full query, but if a large number of read events is needed the client might be misbehaving or even actively trying to hurt the server. When this limit is reached, the TCP connection will be terminated and the offending client IP (or range, see ``connections_mask_v4``, ``connections_mask_v6`` and ``connection_mask_v4_port`` to see how clients can be aggregated) will be prevented from opening a new TCP connection for up to ``ban_duration_for_exceeding_max_read_ios_per_query`` seconds"
    - name: "ban_duration_for_exceeding_max_read_ios_per_query"
      type: "u32"
      default: "60"
      lua-name: "setBanDurationForExceedingMaxReadIOsPerQuery"
      internal-field-name: "d_tcpBanDurationForExceedingMaxReadIOsPerQuery"
      runtime-configurable: false
      description: "Set for how long, in seconds, a client (or range, see ``connections_mask_v4``, ``connections_mask_v6`` and ``connection_mask_v4_port`` to see how clients can be aggregated) will be prevented from opening a new TCP connection when it has exceeded ``max_read_ios_per_query`` over a TCP connection"
    - name: "ban_duration_for_exceeding_tcp_tls_rate"
      type: "u32"
      default: "10"
      lua-name: "setBanDurationForExceedingTCPTLSRate"
      internal-field-name: "d_tcpBanDurationForExceedingTCPTLSRate"
      runtime-configurable: false
      description: "Set for how long, in seconds, a client (or range, see ``connections_mask_v4``, ``connections_mask_v6`` and ``connection_mask_v4_port`` to see how clients can be aggregated) will be prevented from opening a new TCP connection when it has exceeded ``max_connection_rate_per_client``, ``max_tls_new_session_rate_per_client`` or ``max_tls_resumed_session_rate_per_client``"
    - name: "connections_mask_v4"
      type: "u8"
      default: "32"
      lua-name: "setTCPConnectionsMaskV4"
      internal-field-name: "d_tcpConnectionsMaskV4"
      runtime-configurable: false
      description: "Mask to apply to IPv4 addresses when enforcing ``max_connection_rate_per_client``, ``max_tls_new_session_rate_per_client`` and ``max_tls_resumed_session_rate_per_client``. In some scenarios it might make sense to apply these settings to a /28 range rather than a single address, for example"
    - name: "connections_mask_v6"
      type: "u8"
      default: "128"
      lua-name: "setTCPConnectionsMaskV6"
      internal-field-name: "d_tcpConnectionsMaskV6"
      runtime-configurable: false
      description: "Mask to apply to IPv6 addresses when enforcing ``max_connection_rate_per_client``, ``max_tls_new_session_rate_per_client`` and ``max_tls_resumed_session_rate_per_client``. In some scenarios it might make sense to apply these settings to a whole /64 IPv6 range instead of a single address, for example"
    - name: "connections_mask_v4_port"
      type: u8
      default: "0"
      lua-name: "setTCPConnectionsMaskV4Port"
      internal-field-name: "d_tcpConnectionsMaskV4Port"
      runtime-configurable: false
      description: "Number of bits of port to consider when enforcing ``max_connection_rate_per_client``, ``max_tls_new_session_rate_per_client`` and ``max_tls_resumed_session_rate_per_client`` over IPv4, for CGNAT deployments. Default is 0 meaning that the port is not taken into account. For example passing ``2`` here, which only makes sense if ``connections_mask_v4`` is set to ``32``, will split a given IPv4 address into four port ranges: ``0-16383``, ``16384-32767``, ``32768-49151`` and ``49152-65535``"

udp_tuning:
  category: "tuning.udp"
  parameters:
    - name: "messages_per_round"
      type: "u32"
      default: 1
      lua-name: "setUDPMultipleMessagesVectorSize"
      internal-field-name: "d_udpVectorSize"
      runtime-configurable: false
    - name: "send_buffer_size"
      type: "u32"
      default: 0
      lua-name: "setUDPSocketBufferSizes"
      internal-field-name: "d_socketUDPSendBuffer"
      runtime-configurable: false
    - name: "receive_buffer_size"
      type: "u32"
      default: 0
      lua-name: "setUDPSocketBufferSizes"
      internal-field-name: "d_socketUDPRecvBuffer"
      runtime-configurable: false
    - name: "max_outstanding_per_backend"
      type: "u32"
      default: 65535
      lua-name: "setMaxUDPOutstanding"
      internal-field-name: "d_maxUDPOutstanding"
      runtime-configurable: false
    - name: "timeout"
      type: "u8"
      default: 2
      lua-name: "setUDPTimeout"
      internal-field-name: "d_udpTimeout"
      runtime-configurable: false
    - name: "randomize_outgoing_sockets_to_backend"
      type: "bool"
      default: "false"
      lua-name: "setRandomizedOutgoingSockets"
      internal-field-name: "d_randomizeUDPSocketsToBackend"
      runtime-configurable: false
    - name: "randomize_ids_to_backend"
      type: "bool"
      default: "false"
      lua-name: "setRandomizedIdsOverUDP"
      internal-field-name: "d_randomizeIDsToBackend"
      runtime-configurable: false

tls_engine:
  description: "OpenSSL engine settings"
  parameters:
    - name: "name"
      type: "String"
      description: "The engine name"
    - name: "default_string"
      type: "String"
      default: ""
      description: "The default string to pass to the engine. The exact value depends on the engine but represents the algorithms to register with the engine, as a list of comma-separated keywords. For example 'RSA,EC,DSA,DH,PKEY,PKEY_CRYPTO,PKEY_ASN1'"

tls_tuning:
  category: "tuning.tls"
  parameters:
    - name: "outgoing_tickets_cache_cleanup_delay"
      type: "u16"
      default: "60"
      lua-name: "setOutgoingTLSSessionsCacheCleanupDelay"
      internal-field-name: "d_tlsSessionCacheCleanupDelay"
      runtime-configurable: true
    - name: "outgoing_tickets_cache_validity"
      type: "u16"
      default: "600"
      lua-name: "setOutgoingTLSSessionsCacheMaxTicketValidity"
      internal-field-name: "d_tlsSessionCacheSessionValidity"
      runtime-configurable: true
    - name: "max_outgoing_tickets_per_backend"
      type: "u16"
      default: "20"
      lua-name: "setOutgoingTLSSessionsCacheMaxTicketsPerBackend"
      internal-field-name: "d_tlsSessionCacheMaxSessionsPerBackend"
      runtime-configurable: true
    - name: "providers"
      type: "Vec<String>"
      default: ""
      lua-name: "loadTLSProvider"
      description: "Load OpenSSL providers. Providers can be used to accelerate cryptographic operations, like for example Intel QAT. At the moment up to a maximum of 32 loaded providers are supported, and that support is experimental. Note that this feature is only available when building against OpenSSL version >= 3.0 and with the ``-–enable-tls-provider`` configure flag on. In other cases, ``engines`` should be used instead. Some providers might actually degrade performance unless the TLS asynchronous mode of OpenSSL is enabled. To enable it see the ``async_mode`` parameter of TLS frontends"
    - name: "engines"
      type: "Vec<TlsEngineConfiguration>"
      default: true
      lua-name: "loadTLSEngine"
      description: "Load OpenSSL engines. Engines can be used to accelerate cryptographic operations, like for example Intel QAT. At the moment up to a maximum of 32 loaded engines are supported, and that support is experimental. Some engines might actually degrade performance unless the TLS asynchronous mode of OpenSSL is enabled. To enable it see the ``async_mode`` parameter of TLS frontends"

doh_tuning:
  category: "tuning.doh"
  parameters:
    - name: "outgoing_worker_threads"
      type: "u32"
      default: 10
      lua-name: "setOutgoingDoHWorkerThreads"
      internal-field-name: "d_outgoingDoHWorkers"
      runtime-configurable: false
    - name: "outgoing_max_idle_time"
      type: "u64"
      default: 300
      lua-name: "setDoHDownstreamMaxIdleTime"
      internal-field-name: "d_outgoingDoHMaxIdleTime"
      runtime-configurable: false
    - name: "outgoing_cleanup_interval"
      type: "u64"
      default: 60
      lua-name: "setDoHDownstreamCleanupInterval"
      internal-field-name: "d_outgoingDoHCleanupInterval"
      runtime-configurable: false
    - name: "outgoing_max_idle_connection_per_backend"
      type: "u64"
      default: 10
      lua-name: "setMaxIdleDoHConnectionsPerDownstream"
      internal-field-name: "d_outgoingDoHMaxIdlePerBackend"
      runtime-configurable: false

cache_settings:
  parameters:
    - name: "stale_entries_ttl"
      type: "u32"
      default: "0"
      lua-name: "setStaleCacheEntriesTTL"
      internal-field-name: "d_staleCacheEntriesTTL"
      runtime-configurable: true
    - name: "cleaning_delay"
      type: "u16"
      default: "60"
      lua-name: "setCacheCleaningDelay"
      internal-field-name: "d_cacheCleaningDelay"
      runtime-configurable: true
    - name: "cleaning_percentage"
      type: "u16"
      default: "100"
      lua-name: "setCacheCleaningPercentage"
      internal-field-name: "d_cacheCleaningPercentage"
      runtime-configurable: true

security_polling:
  parameters:
    - name: "polling_interval"
      type: "u32"
      default: "3600"
      lua-name: "setSecurityPollInterval"
      internal-field-name: "d_secPollInterval"
      runtime-configurable: true
    - name: "suffix"
      type: "String"
      default: "secpoll.powerdns.com."
      lua-name: "setSecurityPollSuffix"
      internal-field-name: "d_secPollSuffix"
      runtime-configurable: true

structured_logging:
  description: "Structured-like logging settings"
  parameters:
    - name: "enabled"
      type: "bool"
      default: "false"
      description: |
                   Set whether log messages should be in a structured-logging-like format. This is turned off by default.
                     The resulting format looks like this (when timestamps are enabled via ``--log-timestamps`` and with ``level_prefix: prio`` and ``time_format: ISO8601``)::

                         ts=\"2023-11-06T12:04:58+0100\" prio=\"Info\" msg=\"Added downstream server 127.0.0.1:53\"

                     And with ``level_prefix: level`` and ``time_format: numeric``)::

                         ts=\"1699268815.133\" level=\"Info\" msg=\"Added downstream server 127.0.0.1:53\"

    - name: "level_prefix"
      type: "String"
      default: "prio"
      description: "Set the key name for the log level. There is unfortunately no standard name for this key, so in some setups it might be useful to set this value to a different name to have consistency across products"
    - name: "time_format"
      type: "String"
      default: "numeric"
      description: "Set the time format"
      supported-values:
        - "ISO8601"
        - "numeric"

logging:
  description: "Logging settings"
  parameters:
    - name: "verbose"
      type: "bool"
      default: "false"
      lua-name: "setVerbose"
      internal-field-name: "d_verbose"
      runtime-configurable: true
      description: "Set whether log messages issued at the verbose level should be logged"
    - name: "verbose_health_checks"
      type: "bool"
      default: "false"
      lua-name: "setVerboseHealthChecks"
      internal-field-name: "d_verboseHealthChecks"
      runtime-configurable: true
      description: "Set whether health check errors should be logged"
    - name: "verbose_log_destination"
      type: "String"
      default: ""
      lua-name: "setVerboseLogDestination"
      description: "Set a destination file to write the ‘verbose’ log messages to, instead of sending them to syslog and/or the standard output which is the default. Note that these messages will no longer be sent to syslog or the standard output once this option has been set. There is no rotation or file size limit. Only use this feature for debugging under active operator control"
    - name: "syslog_facility"
      type: "String"
      default: ""
      lua-name: "setSyslogFacility"
      description: "Set the syslog logging facility to the supplied value (values with or without the ``log_`` prefix are supported)"
      supported-values: [local0, log_local0, local1, log_local1, local2, log_local2, local3, log_local3, local4, log_local4, local5, log_local5, local6, log_local6, local7, log_local7, kern, log_kern, user, log_user, mail, log_mail, daemon, log_daemon, auth, log_auth, syslog, log_syslog, lpr, log_lpr, news, log_news, uucp, log_uucp, cron, log_cron, authpriv, log_authpriv, ftp, log_ftp]
    - name: "structured"
      type: "StructuredLoggingConfiguration"
      default: true

general:
  description: "General settings"
  parameters:
    - name: "edns_udp_payload_size_self_generated_answers"
      type: "u16"
      default: "1232"
      lua-name: "setPayloadSizeOnSelfGeneratedAnswers"
      internal-field-name: "d_payloadSizeSelfGenAnswers"
      runtime-configurable: true
      description: "Set the UDP payload size advertised via EDNS on self-generated responses. In accordance with :rfc:`RFC 6891 <6891#section-6.2.5>`, values lower than 512 will be treated as equal to 512"
    - name: "add_edns_to_self_generated_answers"
      type: "bool"
      default: "true"
      lua-name: "setAddEDNSToSelfGeneratedResponses"
      internal-field-name: "d_addEDNSToSelfGeneratedResponses"
      runtime-configurable: true
      description: "Whether to add EDNS to self-generated responses, provided that the initial query had EDNS"
    - name: "truncate_tc_answers"
      type: "bool"
      default: "false"
      lua-name: "truncateTC"
      internal-field-name: "d_truncateTC"
      runtime-configurable: true
      description: "Remove any left-over records in responses with the TC bit set, in accordance with :rfc:`RFC 6891 <6891#section-7>`"
    - name: "fixup_case"
      type: "bool"
      default: "false"
      lua-name: "fixupCase"
      internal-field-name: "d_fixupCase"
      runtime-configurable: true
      description: "If set, ensure that the case of the DNS qname in the response matches the one from the query"
    - name: "allow_empty_responses"
      type: "bool"
      default: "false"
      lua-name: "setAllowEmptyResponse"
      internal-field-name: "d_allowEmptyResponse"
      runtime-configurable: true
      description: "Set to true (defaults to false) to allow empty responses (qdcount=0) with a NoError or NXDomain rcode (default) from backends. dnsdist drops these responses by default because it can't match them against the initial query since they don't contain the qname, qtype and qclass, and therefore the risk of collision is much higher than with regular responses"
    - name: "drop_empty_queries"
      type: "bool"
      default: "false"
      lua-name: "setDropEmptyQueries"
      internal-field-name: "d_dropEmptyQueries"
      runtime-configurable: true
      description: "Set to true (defaults to false) to drop empty queries (qdcount=0) right away, instead of answering with a NotImp rcode. dnsdist used to drop these queries by default because most rules and existing Lua code expects a query to have a qname, qtype and qclass. However :rfc:`7873` uses these queries to request a server cookie, and :rfc:`8906` as a conformance test, so answering these queries with NotImp is much better than not answering at all"
    - name: "capabilities_to_retain"
      type: "Vec<String>"
      default: ""
      lua-name: "addCapabilitiesToRetain"
      runtime-configurable: false
      description: |
                   Accept a Linux capability as a string, or a list of these, to retain after startup so that privileged operations can still be performed at runtime.
                     Keeping ``CAP_SYS_ADMIN`` on kernel 5.8+ for example allows loading eBPF programs and altering eBPF maps at runtime even if the ``kernel.unprivileged_bpf_disabled`` sysctl is set.
                     Note that this does not grant the capabilities to the process, doing so might be done by running it as root which we don't advise, or by adding capabilities via the systemd unit file, for example.
                     Please also be aware that switching to a different user via ``--uid`` will still drop all capabilities."
    - name: "forward_via_udp_first"
      type: "bool"
      default: "false"
      lua-name: "setForwardViaUDPFirst"
      internal-field-name: "d_forwardViaUDPFirst"
      runtime-configurable: true
      description: "Whether queries received over DoTCP, DoT, DoQ and DoH3 should be forwarded to the backend via UDP (unless the backend is TCP-only). If a truncated answer is received, the query will be re-tried over TCP."

netmask_group:
  description: "Group of netmasks"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this netmask group"
    - name: "netmasks"
      type: "Vec<String>"
      default: ""
      description: "List of netmasks. A subnet that is not followed by ``/`` will be interpreted as a ``/32`` or ``/128`` subnet (a single address), depending on address family. It is possible to exclude ranges by prefixing an item with the negation character ``!``"

packet_cache:
  description: "Packet-cache settings"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of the packet cache object"
    - name: "size"
      type: "u64"
      description: "The maximum number of entries in this cache"
    - name: "deferrable_insert_lock"
      type: "bool"
      default: "true"
      description: "Whether the cache should give up insertion if the lock is held by another thread, or simply wait to get the lock"
    - name: "dont_age"
      type: "bool"
      default: "false"
      description: "Don’t reduce TTLs when serving from the cache. Use this when dnsdist fronts a cluster of authoritative servers"
    - name: "keep_stale_data"
      type: "bool"
      default: "false"
      description: "Whether to suspend the removal of expired entries from the cache when there is no backend available in at least one of the pools using this cache"
    - name: "max_negative_ttl"
      type: "u32"
      default: "3600"
      description: "Cache a NXDomain or NoData answer from the backend for at most this amount of seconds, even if the TTL of the SOA record is higher"
    - name: "max_ttl"
      type: "u32"
      default: "86400"
      description: "Cap the TTL for records to his number"
    - name: "min_ttl"
      type: "u32"
      default: 0
      description: "Don’t cache entries with a TTL lower than this"
    - name: "shards"
      type: "u32"
      default: "20"
      description: "Number of shards to divide the cache into, to reduce lock contention"
    - name: "parse_ecs"
      type: "bool"
      default: "false"
      description: "Whether any EDNS Client Subnet option present in the query should be extracted and stored to be able to detect hash collisions involving queries with the same qname, qtype and qclass but a different incoming ECS value. Enabling this option adds a parsing cost and only makes sense if at least one backend might send different responses based on the ECS value, so it's disabled by default. Enabling this option is required for the :doc:`../advanced/zero-scope` option to work"
    - name: "stale_ttl"
      type: "u32"
      default: "60"
      description: "When the backend servers are not reachable, and global configuration setStaleCacheEntriesTTL is set appropriately, TTL that will be used when a stale cache entry is returned"
    - name: "temporary_failure_ttl"
      type: "u32"
      default: "60"
      description: "On a SERVFAIL or REFUSED from the backend, cache for this amount of seconds"
    - name: "truncated_ttl"
      type: "u32"
      default: 0
      description: "On a truncated (TC=1, no records) response from the backend, cache for this amount of seconds. 0, the default, means that truncated answers are not cached"
    - name: "cookie_hashing"
      type: "bool"
      default: "false"
      description: "If true, EDNS Cookie values will be hashed, resulting in separate entries for different cookies in the packet cache. This is required if the backend is sending answers with EDNS Cookies; otherwise, a client might receive an answer with the wrong cookie"
    - name: "maximum_entry_size"
      type: "u32"
      default: "4096"
      description: "The maximum size, in bytes, of a DNS packet that can be inserted into the packet cache"
    - name: "options_to_skip"
      type: "Vec<String>"
      default: ""
      description: "Extra list of EDNS option codes to skip when hashing the packet (if ``cookie_hashing`` above is false, EDNS cookie option number will be added to this list internally)"
    - name: "payload_ranks"
      type: "Vec<u16>"
      default: "[]"
      description: "List of payload size used when hashing the packet. The list will be sorted in ascending order and searched to find a lower bound value for the payload size in the packet. If found then it will be used for packet hashing. Values less than 512 or greater than ``maximum_entry_size`` above will be discarded. This option is to enable cache entry sharing between clients using different payload sizes when needed"

proxy_protocol:
  description: "Proxy Protocol-related settings"
  parameters:
    - name: "acl"
      type: "Vec<String>"
      default: ""
      description: "Set the list of netmasks from which a Proxy Protocol header will be required, over UDP, TCP and DNS over TLS. The default is empty. Note that a proxy protocol payload will be required from these clients, regular DNS queries will no longer be accepted if they are not preceded by a proxy protocol payload. Be also aware that, if ``apply_acl_to_proxied_clients`` is set (default is false), the general ACL will be applied to the source IP address as seen by dnsdist first, but also to the source IP address provided in the Proxy Protocol header."
    - name: "maximum_payload_size"
      type: "u32"
      default: "512"
      lua-name: "setProxyProtocolMaximumPayloadSize"
      internal-field-name: "d_proxyProtocolMaximumSize"
      runtime-configurable: true
      description: "Set the maximum size of a Proxy Protocol payload that dnsdist is willing to accept, in bytes. The default is 512, which is more than enough except for very large TLV data. This setting can’t be set to a value lower than 16 - the absolute minimum size of a Proxy Protocol header"
    - name: "apply_acl_to_proxied_clients"
      type: "bool"
      default: "false"
      lua-name: "setProxyProtocolApplyACLToProxiedClients"
      internal-field-name: "d_applyACLToProxiedClients"
      runtime-configurable: true
      description: "Whether the general ACL should be applied to the source IP address provided in the Proxy Protocol header, in addition to being applied to the source IP address as seen by dnsdist first"

snmp:
  description: "SNMP-related settings"
  parameters:
    - name: "enabled"
      type: "bool"
      default: "false"
      lua-name: "snmpAgent"
      internal-field-name: "d_snmpEnabled"
      runtime-configurable: false
      description: "Enable SNMP support"
    - name: "traps_enabled"
      type: "bool"
      default: "false"
      lua-name: "snmpAgent"
      internal-field-name: "d_snmpTrapsEnabled"
      runtime-configurable: false
      description: "Enable the sending of SNMP traps for specific events"
    - name: "daemon_socket"
      type: "String"
      default: ""
      lua-name: "snmpAgent"
      internal-field-name: "d_snmpDaemonSocketPath"
      runtime-configurable: false
      description: "A string specifying how to connect to the daemon agent. This is usually the path to a UNIX socket, but e.g. ``tcp:localhost:705`` can be used as well. By default, SNMP agent’s default socket is used"

query_count:
  description: "Per-record Carbon statistics of the amount of queries. See :doc:`../guides/carbon`"
  parameters:
    - name: "enabled"
      type: "bool"
      default: "false"
      description: "Enable per-record Carbon statistics of the amount of queries"
    - name: "filter_function_name"
      type: "String"
      default: ""
      description: "The name of a Lua function to filter which query should be accounted for, and how"
    - name: "filter_function_code"
      type: "String"
      default: ""
      description: "The code of a Lua function to filter which query should be accounted for, and how"
    - name: "filter_function_file"
      type: "String"
      default: ""
      description: "The path to a file containing the code of a Lua function to filter which query should be accounted for, and how"

pool:
  description: "Settings for a pool of servers"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this pool"
    - name: "packet_cache"
      type: "String"
      default: ""
      description: "The name of a packet cache object, if any"
    - name: "policy"
      type: "String"
      default: ""
      description: "The name of the load-balancing policy associated to this pool. If left empty, the global policy will be used"

custom_load_balancing_policy:
  description: "Settings for a custom load-balancing policy"
  parameters:
    - name: "name"
      type: "String"
      description: "The name of this load-balancing policy"
    - name: "function_name"
      type: "String"
      default: ""
      description: "The name of a Lua function implementing the custom load-balancing policy. If ``ffi`` is false, this function takes a table of :class:`Server` objects and a :class:`DNSQuestion` representing the current query, and must return the index of the selected server in the supplied table. If ``ffi`` is true, this function takes a ``const dnsdist_ffi_servers_list_t*`` and a ``dnsdist_ffi_dnsquestion_t*``"
    - name: "function_code"
      type: "String"
      default: ""
      description: "Same than ``function_name`` but contain actual Lua code returning a function instead of a name"
    - name: "function_file"
      type: "String"
      default: ""
      description: "Same than ``function_name`` but contain the path to a file containing actual Lua code returning a function instead of a name"
    - name: "ffi"
      type: "bool"
      default: "false"
      description: "Whether the function uses the faster but more complicated Lua FFI API"
    - name: "per_thread"
      type: "bool"
      default: "false"
      description: "If set, the resulting policy will be executed in a lock-free per-thread context, instead of running in the global Lua context. Note that ``function_name`` cannot be used, since this needs the Lua code to create the function in a new Lua context instead of just a function"

load_balancing_policies:
  description: "Setting for load-balancing policies"
  parameters:
    - name: "default_policy"
      type: "String"
      default: "leastOutstanding"
      lua-name: "setServerPolicy"
      runtime-configurable: true
      description: "Set the default server selection policy"
    - name: "servfail_on_no_server"
      type: "bool"
      default: "false"
      lua-name: "setServFailWhenNoServer"
      internal-field-name: "d_servFailOnNoPolicy"
      runtime-configurable: true
      description: "If set, return a ServFail when no servers are available, instead of the default behaviour of dropping the query"
    - name: "round_robin_servfail_on_no_server"
      type: "bool"
      default: "false"
      lua-name: "setRoundRobinFailOnNoServer"
      internal-field-name: "d_roundrobinFailOnNoServer"
      runtime-configurable: true
      description: "By default the roundrobin load-balancing policy will still try to select a backend even if all backends are currently down. Setting this to true will make the policy fail and return that no server is available instead"
    - name: "weighted_balancing_factor"
      type: "f64"
      default: 0.0
      lua-name: "setWeightedBalancingFactor"
      internal-field-name: "d_weightedBalancingFactor"
      runtime-configurable: false
      description: "Set the maximum imbalance between the number of outstanding queries intended for a given server, based on its weight, and the actual number, when using the ``whashed``, ``wrandom`` or ``orderedWrandUntag`` load-balancing policy. Default is 0, which disables the bounded-load algorithm"
    - name: "consistent_hashing_balancing_factor"
      type: "f64"
      default: 0.0
      lua-name: "setConsistentHashingBalancingFactor"
      internal-field-name: "d_consistentHashBalancingFactor"
      runtime-configurable: false
      description: "Set the maximum imbalance between the number of outstanding queries intended for a given server, based on its weight, and the actual number, when using the ``chashed`` consistent hashing load-balancing policy. Default is 0, which disables the bounded-load algorithm"
    - name: "custom_policies"
      type: "Vec<CustomLoadBalancingPolicyConfiguration>"
      default: true
      description: "Custom load-balancing policies implemented in Lua"
    - name: "hash_perturbation"
      type: "u32"
      default: "0"
      lua-name: "setWHashedPerturbation"
      internal-field-name: "d_hashPerturbation"
      runtime-configurable: false
      description: "Set the hash perturbation value to be used in the ``whashed`` policy instead of a random one, allowing to have consistent ``whashed`` results on different instances"

query_rule:
  description: "A rule that can applied on queries"
  skip-serde: true
  parameters:
    - name: "name"
      type: "String"
      default: ""
      description: "The name to assign to this rule"
    - name: "uuid"
      type: "String"
      description: "The UUID to assign to this rule, if any"
    - name: "selector"
      type: "Selector"
      description: "The selector to match queries against"
    - name: "action"
      type: "Action"
      description: "The action taken if the selector matches"

response_rule:
  description: "A rule that can applied on responses"
  skip-serde: true
  parameters:
    - name: "name"
      type: "String"
      default: ""
      description: "The name to assign to this rule"
    - name: "uuid"
      type: "String"
      default: ""
      description: "The UUID to assign to this rule, if any"
    - name: "selector"
      type: "Selector"
      description: "The selector to match responses against"
    - name: "action"
      type: "ResponseAction"
      description: "The action taken if the selector matches"

xsk:
  description: "An ``XSK`` / ``AF_XDP`` sockets map"
  parameters:
    - name: "name"
      type: "String"
      description: "The name to give to this map"
    - name: "interface"
      type: "String"
      description: "The network interface to which the sockets will be associated"
    - name: "queues"
      type: "u16"
      description: "The number of queues the network interface has (can be retrieved by looking at the ``Combined`` line in the output of ``sudo ethtool -l <interface name>``). It should match the number of threads of the frontend or backend associated to this map"
    - name: "frames"
      type: "u32"
      default: 65536
      description: "The number of frames to allocate for this map"
    - name: "map_path"
      type: "String"
      default: "/sys/fs/bpf/dnsdist/xskmap"
      descripton: "The filesystem path this map will be pinned to, which allows the external ``XDP`` program to communicate with :program:`dnsdist`"
