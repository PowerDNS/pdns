# Makefile.in generated by automake 1.14.1 from Makefile.am.
# pdns/ext/polarssl-1.3.2/library/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/pdns
pkgincludedir = $(includedir)/pdns
pkglibdir = $(libdir)/pdns
pkglibexecdir = $(libexecdir)/pdns
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = pdns/ext/polarssl-1.3.2/library
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pdns_check_cdb.m4 \
	$(top_srcdir)/m4/pdns_check_ldap.m4 \
	$(top_srcdir)/m4/pdns_check_opendbx.m4 \
	$(top_srcdir)/m4/pdns_check_ragel.m4 \
	$(top_srcdir)/m4/pdns_d_fortify_source.m4 \
	$(top_srcdir)/m4/pdns_enable_botan.m4 \
	$(top_srcdir)/m4/pdns_enable_p11kit.m4 \
	$(top_srcdir)/m4/pdns_enable_remotebackend_zeromq.m4 \
	$(top_srcdir)/m4/pdns_enable_unit_tests.m4 \
	$(top_srcdir)/m4/pdns_enable_verbose_logging.m4 \
	$(top_srcdir)/m4/pdns_param_ssp_buffer_size.m4 \
	$(top_srcdir)/m4/pdns_pie.m4 $(top_srcdir)/m4/pdns_relro.m4 \
	$(top_srcdir)/m4/pdns_stack_protector.m4 \
	$(top_srcdir)/m4/pdns_with_cryptopp.m4 \
	$(top_srcdir)/m4/pdns_with_geo.m4 \
	$(top_srcdir)/m4/pdns_with_lmdb.m4 \
	$(top_srcdir)/m4/pdns_with_lua.m4 \
	$(top_srcdir)/m4/pdns_with_mysql.m4 \
	$(top_srcdir)/m4/pdns_with_oracle.m4 \
	$(top_srcdir)/m4/pdns_with_postgresql.m4 \
	$(top_srcdir)/m4/pdns_with_system_polarssl.m4 \
	$(top_srcdir)/m4/tm-gmtoff.m4 $(top_srcdir)/m4/warnings.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libpolarssl_la_LIBADD =
am_libpolarssl_la_OBJECTS = libpolarssl_la-aes.lo \
	libpolarssl_la-arc4.lo libpolarssl_la-asn1parse.lo \
	libpolarssl_la-asn1write.lo libpolarssl_la-base64.lo \
	libpolarssl_la-bignum.lo libpolarssl_la-blowfish.lo \
	libpolarssl_la-camellia.lo libpolarssl_la-certs.lo \
	libpolarssl_la-cipher.lo libpolarssl_la-cipher_wrap.lo \
	libpolarssl_la-ctr_drbg.lo libpolarssl_la-debug.lo \
	libpolarssl_la-des.lo libpolarssl_la-dhm.lo \
	libpolarssl_la-ecdh.lo libpolarssl_la-ecdsa.lo \
	libpolarssl_la-ecp.lo libpolarssl_la-entropy.lo \
	libpolarssl_la-entropy_poll.lo libpolarssl_la-error.lo \
	libpolarssl_la-gcm.lo libpolarssl_la-havege.lo \
	libpolarssl_la-md2.lo libpolarssl_la-md4.lo \
	libpolarssl_la-md5.lo libpolarssl_la-md.lo \
	libpolarssl_la-md_wrap.lo \
	libpolarssl_la-memory_buffer_alloc.lo libpolarssl_la-memory.lo \
	libpolarssl_la-net.lo libpolarssl_la-oid.lo \
	libpolarssl_la-padlock.lo libpolarssl_la-pbkdf2.lo \
	libpolarssl_la-pem.lo libpolarssl_la-pk.lo \
	libpolarssl_la-pkcs11.lo libpolarssl_la-pkcs12.lo \
	libpolarssl_la-pkcs5.lo libpolarssl_la-pkparse.lo \
	libpolarssl_la-pk_wrap.lo libpolarssl_la-pkwrite.lo \
	libpolarssl_la-rsa.lo libpolarssl_la-sha1.lo \
	libpolarssl_la-sha256.lo libpolarssl_la-sha512.lo \
	libpolarssl_la-ssl_cache.lo libpolarssl_la-ssl_ciphersuites.lo \
	libpolarssl_la-ssl_cli.lo libpolarssl_la-ssl_srv.lo \
	libpolarssl_la-ssl_tls.lo libpolarssl_la-threading.lo \
	libpolarssl_la-timing.lo libpolarssl_la-version.lo \
	libpolarssl_la-x509.lo libpolarssl_la-x509_create.lo \
	libpolarssl_la-x509_crl.lo libpolarssl_la-x509_crt.lo \
	libpolarssl_la-x509_csr.lo libpolarssl_la-x509write_crt.lo \
	libpolarssl_la-x509write_csr.lo libpolarssl_la-xtea.lo
libpolarssl_la_OBJECTS = $(am_libpolarssl_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libpolarssl_la_SOURCES)
DIST_SOURCES = $(libpolarssl_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ruben/src/pdns/build-aux/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)
AM_CXXFLAGS = -I$(top_builddir) -I$(top_srcdir)
AM_DEFAULT_VERBOSITY = 1
AR = ar
ASCIIDOC = asciidoc
AUTOCONF = ${SHELL} /home/ruben/src/pdns/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/ruben/src/pdns/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/ruben/src/pdns/build-aux/missing automake-1.14
AWK = gawk
BOOST_CPPFLAGS = 
BOOST_LDPATH = 
BOOST_PROGRAM_OPTIONS_LDFLAGS = 
BOOST_PROGRAM_OPTIONS_LDPATH = 
BOOST_PROGRAM_OPTIONS_LIBS = -lboost_program_options
BOOST_ROOT = 
BOOST_SERIALIZATION_LDFLAGS = 
BOOST_SERIALIZATION_LDPATH = 
BOOST_SERIALIZATION_LIBS = -lboost_serialization
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = 
BOOST_UNIT_TEST_FRAMEWORK_LDPATH = 
BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework
BOTAN110_CFLAGS = 
BOTAN110_LIBS = 
BOTAN18_CFLAGS = 
BOTAN18_LIBS = 
CC = gcc
CCDEPMODE = depmode=none
CDB_CFLAGS = 
CDB_LIBS = -lcdb 
CFLAGS = -g -O2 -fstack-protector --param ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIE -DPIE
CPP = gcc -E
CPPFLAGS = 
CRYPTOPP_CFLAGS = 
CRYPTOPP_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -D_GNU_SOURCE -Wall -g -O2 -fstack-protector --param ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIE -DPIE
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DYNLINKFLAGS = -rdynamic
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GEOIP_CFLAGS = -I/usr/include/ 
GEOIP_LIBS = -lGeoIP 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -lrt -Wl,-z -Wl,relro -Wl,-z -Wl,now
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBCRYPT = -lcrypt 
LIBDL = -ldl 
LIBLDAP = ldap_r
LIBLMDB = lmdb
LIBOBJS = 
LIBOPENDBX = opendbx
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBZMQ_CFLAGS = 
LIBZMQ_LIBS = -lzmq 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LUA_CFLAGS = 
LUA_LIBS = 
MAKEINFO = ${SHELL} /home/ruben/src/pdns/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MYSQL_inc = -I/usr/include/mysql
MYSQL_lib = -L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -lssl -lcrypto -ldl
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
ORACLE_CFLAGS = 
ORACLE_LIBS = 
OTOOL = 
OTOOL64 = 
P11KIT1_CFLAGS = -I/usr/include/p11-kit-1 
P11KIT1_LIBS = -lp11-kit 
PACKAGE = pdns
PACKAGE_BUGREPORT = 
PACKAGE_NAME = pdns
PACKAGE_STRING = pdns git
PACKAGE_TARNAME = pdns
PACKAGE_URL = 
PACKAGE_VERSION = git
PATH_SEPARATOR = :
PGSQL_inc = -I/usr/include
PGSQL_lib = -lpq
PGSQL_pg_config = /usr/bin/pg_config
PIE_CFLAGS = -fPIE -DPIE
PIE_LDFLAGS = -pie
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POLARSSL_CFLAGS = -I$(top_srcdir)/pdns/ext/polarssl-1.3.2/include/
POLARSSL_LIBS = -L$(top_builddir)/pdns/ext/polarssl-1.3.2/library/ -lpolarssl
POLARSSL_SUBDIR = polarssl-1.3.2
RAGEL = ragel
RANLIB = ranlib
RELRO_LDFLAGS = -Wl,-z -Wl,relro -Wl,-z -Wl,now
REMOTEBACKEND_ZEROMQ = yes
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3_CFLAGS = 
SQLITE3_LIBS = -lsqlite3 
STRIP = strip
THREADFLAGS = -pthread
VERSION = git
YACC = bison -y
YAML_CFLAGS = 
YAML_LIBS = -lyaml-cpp 
YFLAGS = 
abs_builddir = /home/ruben/src/pdns/pdns/ext/polarssl-1.3.2/library
abs_srcdir = /home/ruben/src/pdns/pdns/ext/polarssl-1.3.2/library
abs_top_builddir = /home/ruben/src/pdns
abs_top_srcdir = /home/ruben/src/pdns
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ruben/src/pdns/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
moduledirs =  bindbackend geoipbackend gmysqlbackend gpgsqlbackend gsqlite3backend mydnsbackend tinydnsbackend remotebackend randombackend opendbxbackend ldapbackend lmdbbackend
modulelibs = 
moduleobjects = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
programdescend = pdns
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
socketdir = /var/run
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../../
top_builddir = ../../../..
top_srcdir = ../../../..
noinst_LTLIBRARIES = libpolarssl.la
libpolarssl_la_SOURCES = aes.c arc4.c asn1parse.c asn1write.c base64.c bignum.c blowfish.c camellia.c certs.c cipher.c cipher_wrap.c ctr_drbg.c debug.c des.c dhm.c ecdh.c ecdsa.c ecp.c entropy.c entropy_poll.c error.c gcm.c havege.c md2.c md4.c md5.c md.c md_wrap.c memory_buffer_alloc.c memory.c net.c oid.c padlock.c pbkdf2.c pem.c pk.c pkcs11.c pkcs12.c pkcs5.c pkparse.c pk_wrap.c pkwrite.c rsa.c sha1.c sha256.c sha512.c ssl_cache.c ssl_ciphersuites.c ssl_cli.c ssl_srv.c ssl_tls.c threading.c timing.c version.c x509.c x509_create.c x509_crl.c x509_crt.c x509_csr.c x509write_crt.c x509write_csr.c xtea.c
libpolarssl_la_CPPFLAGS = -I$(srcdir)/../include -D_FILE_OFFSET_BITS=64 -Wall -W -Wdeclaration-after-statement
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign pdns/ext/polarssl-1.3.2/library/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign pdns/ext/polarssl-1.3.2/library/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libpolarssl.la: $(libpolarssl_la_OBJECTS) $(libpolarssl_la_DEPENDENCIES) $(EXTRA_libpolarssl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libpolarssl_la_OBJECTS) $(libpolarssl_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/libpolarssl_la-aes.Plo
#include ./$(DEPDIR)/libpolarssl_la-arc4.Plo
#include ./$(DEPDIR)/libpolarssl_la-asn1parse.Plo
#include ./$(DEPDIR)/libpolarssl_la-asn1write.Plo
#include ./$(DEPDIR)/libpolarssl_la-base64.Plo
#include ./$(DEPDIR)/libpolarssl_la-bignum.Plo
#include ./$(DEPDIR)/libpolarssl_la-blowfish.Plo
#include ./$(DEPDIR)/libpolarssl_la-camellia.Plo
#include ./$(DEPDIR)/libpolarssl_la-certs.Plo
#include ./$(DEPDIR)/libpolarssl_la-cipher.Plo
#include ./$(DEPDIR)/libpolarssl_la-cipher_wrap.Plo
#include ./$(DEPDIR)/libpolarssl_la-ctr_drbg.Plo
#include ./$(DEPDIR)/libpolarssl_la-debug.Plo
#include ./$(DEPDIR)/libpolarssl_la-des.Plo
#include ./$(DEPDIR)/libpolarssl_la-dhm.Plo
#include ./$(DEPDIR)/libpolarssl_la-ecdh.Plo
#include ./$(DEPDIR)/libpolarssl_la-ecdsa.Plo
#include ./$(DEPDIR)/libpolarssl_la-ecp.Plo
#include ./$(DEPDIR)/libpolarssl_la-entropy.Plo
#include ./$(DEPDIR)/libpolarssl_la-entropy_poll.Plo
#include ./$(DEPDIR)/libpolarssl_la-error.Plo
#include ./$(DEPDIR)/libpolarssl_la-gcm.Plo
#include ./$(DEPDIR)/libpolarssl_la-havege.Plo
#include ./$(DEPDIR)/libpolarssl_la-md.Plo
#include ./$(DEPDIR)/libpolarssl_la-md2.Plo
#include ./$(DEPDIR)/libpolarssl_la-md4.Plo
#include ./$(DEPDIR)/libpolarssl_la-md5.Plo
#include ./$(DEPDIR)/libpolarssl_la-md_wrap.Plo
#include ./$(DEPDIR)/libpolarssl_la-memory.Plo
#include ./$(DEPDIR)/libpolarssl_la-memory_buffer_alloc.Plo
#include ./$(DEPDIR)/libpolarssl_la-net.Plo
#include ./$(DEPDIR)/libpolarssl_la-oid.Plo
#include ./$(DEPDIR)/libpolarssl_la-padlock.Plo
#include ./$(DEPDIR)/libpolarssl_la-pbkdf2.Plo
#include ./$(DEPDIR)/libpolarssl_la-pem.Plo
#include ./$(DEPDIR)/libpolarssl_la-pk.Plo
#include ./$(DEPDIR)/libpolarssl_la-pk_wrap.Plo
#include ./$(DEPDIR)/libpolarssl_la-pkcs11.Plo
#include ./$(DEPDIR)/libpolarssl_la-pkcs12.Plo
#include ./$(DEPDIR)/libpolarssl_la-pkcs5.Plo
#include ./$(DEPDIR)/libpolarssl_la-pkparse.Plo
#include ./$(DEPDIR)/libpolarssl_la-pkwrite.Plo
#include ./$(DEPDIR)/libpolarssl_la-rsa.Plo
#include ./$(DEPDIR)/libpolarssl_la-sha1.Plo
#include ./$(DEPDIR)/libpolarssl_la-sha256.Plo
#include ./$(DEPDIR)/libpolarssl_la-sha512.Plo
#include ./$(DEPDIR)/libpolarssl_la-ssl_cache.Plo
#include ./$(DEPDIR)/libpolarssl_la-ssl_ciphersuites.Plo
#include ./$(DEPDIR)/libpolarssl_la-ssl_cli.Plo
#include ./$(DEPDIR)/libpolarssl_la-ssl_srv.Plo
#include ./$(DEPDIR)/libpolarssl_la-ssl_tls.Plo
#include ./$(DEPDIR)/libpolarssl_la-threading.Plo
#include ./$(DEPDIR)/libpolarssl_la-timing.Plo
#include ./$(DEPDIR)/libpolarssl_la-version.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509_create.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509_crl.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509_crt.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509_csr.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509write_crt.Plo
#include ./$(DEPDIR)/libpolarssl_la-x509write_csr.Plo
#include ./$(DEPDIR)/libpolarssl_la-xtea.Plo

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libpolarssl_la-aes.lo: aes.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-aes.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-aes.Tpo -c -o libpolarssl_la-aes.lo `test -f 'aes.c' || echo '$(srcdir)/'`aes.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-aes.Tpo $(DEPDIR)/libpolarssl_la-aes.Plo
#	$(AM_V_CC)source='aes.c' object='libpolarssl_la-aes.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-aes.lo `test -f 'aes.c' || echo '$(srcdir)/'`aes.c

libpolarssl_la-arc4.lo: arc4.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-arc4.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-arc4.Tpo -c -o libpolarssl_la-arc4.lo `test -f 'arc4.c' || echo '$(srcdir)/'`arc4.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-arc4.Tpo $(DEPDIR)/libpolarssl_la-arc4.Plo
#	$(AM_V_CC)source='arc4.c' object='libpolarssl_la-arc4.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-arc4.lo `test -f 'arc4.c' || echo '$(srcdir)/'`arc4.c

libpolarssl_la-asn1parse.lo: asn1parse.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-asn1parse.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-asn1parse.Tpo -c -o libpolarssl_la-asn1parse.lo `test -f 'asn1parse.c' || echo '$(srcdir)/'`asn1parse.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-asn1parse.Tpo $(DEPDIR)/libpolarssl_la-asn1parse.Plo
#	$(AM_V_CC)source='asn1parse.c' object='libpolarssl_la-asn1parse.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-asn1parse.lo `test -f 'asn1parse.c' || echo '$(srcdir)/'`asn1parse.c

libpolarssl_la-asn1write.lo: asn1write.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-asn1write.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-asn1write.Tpo -c -o libpolarssl_la-asn1write.lo `test -f 'asn1write.c' || echo '$(srcdir)/'`asn1write.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-asn1write.Tpo $(DEPDIR)/libpolarssl_la-asn1write.Plo
#	$(AM_V_CC)source='asn1write.c' object='libpolarssl_la-asn1write.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-asn1write.lo `test -f 'asn1write.c' || echo '$(srcdir)/'`asn1write.c

libpolarssl_la-base64.lo: base64.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-base64.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-base64.Tpo -c -o libpolarssl_la-base64.lo `test -f 'base64.c' || echo '$(srcdir)/'`base64.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-base64.Tpo $(DEPDIR)/libpolarssl_la-base64.Plo
#	$(AM_V_CC)source='base64.c' object='libpolarssl_la-base64.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-base64.lo `test -f 'base64.c' || echo '$(srcdir)/'`base64.c

libpolarssl_la-bignum.lo: bignum.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-bignum.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-bignum.Tpo -c -o libpolarssl_la-bignum.lo `test -f 'bignum.c' || echo '$(srcdir)/'`bignum.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-bignum.Tpo $(DEPDIR)/libpolarssl_la-bignum.Plo
#	$(AM_V_CC)source='bignum.c' object='libpolarssl_la-bignum.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-bignum.lo `test -f 'bignum.c' || echo '$(srcdir)/'`bignum.c

libpolarssl_la-blowfish.lo: blowfish.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-blowfish.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-blowfish.Tpo -c -o libpolarssl_la-blowfish.lo `test -f 'blowfish.c' || echo '$(srcdir)/'`blowfish.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-blowfish.Tpo $(DEPDIR)/libpolarssl_la-blowfish.Plo
#	$(AM_V_CC)source='blowfish.c' object='libpolarssl_la-blowfish.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-blowfish.lo `test -f 'blowfish.c' || echo '$(srcdir)/'`blowfish.c

libpolarssl_la-camellia.lo: camellia.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-camellia.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-camellia.Tpo -c -o libpolarssl_la-camellia.lo `test -f 'camellia.c' || echo '$(srcdir)/'`camellia.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-camellia.Tpo $(DEPDIR)/libpolarssl_la-camellia.Plo
#	$(AM_V_CC)source='camellia.c' object='libpolarssl_la-camellia.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-camellia.lo `test -f 'camellia.c' || echo '$(srcdir)/'`camellia.c

libpolarssl_la-certs.lo: certs.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-certs.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-certs.Tpo -c -o libpolarssl_la-certs.lo `test -f 'certs.c' || echo '$(srcdir)/'`certs.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-certs.Tpo $(DEPDIR)/libpolarssl_la-certs.Plo
#	$(AM_V_CC)source='certs.c' object='libpolarssl_la-certs.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-certs.lo `test -f 'certs.c' || echo '$(srcdir)/'`certs.c

libpolarssl_la-cipher.lo: cipher.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-cipher.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-cipher.Tpo -c -o libpolarssl_la-cipher.lo `test -f 'cipher.c' || echo '$(srcdir)/'`cipher.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-cipher.Tpo $(DEPDIR)/libpolarssl_la-cipher.Plo
#	$(AM_V_CC)source='cipher.c' object='libpolarssl_la-cipher.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-cipher.lo `test -f 'cipher.c' || echo '$(srcdir)/'`cipher.c

libpolarssl_la-cipher_wrap.lo: cipher_wrap.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-cipher_wrap.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-cipher_wrap.Tpo -c -o libpolarssl_la-cipher_wrap.lo `test -f 'cipher_wrap.c' || echo '$(srcdir)/'`cipher_wrap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-cipher_wrap.Tpo $(DEPDIR)/libpolarssl_la-cipher_wrap.Plo
#	$(AM_V_CC)source='cipher_wrap.c' object='libpolarssl_la-cipher_wrap.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-cipher_wrap.lo `test -f 'cipher_wrap.c' || echo '$(srcdir)/'`cipher_wrap.c

libpolarssl_la-ctr_drbg.lo: ctr_drbg.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ctr_drbg.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ctr_drbg.Tpo -c -o libpolarssl_la-ctr_drbg.lo `test -f 'ctr_drbg.c' || echo '$(srcdir)/'`ctr_drbg.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ctr_drbg.Tpo $(DEPDIR)/libpolarssl_la-ctr_drbg.Plo
#	$(AM_V_CC)source='ctr_drbg.c' object='libpolarssl_la-ctr_drbg.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ctr_drbg.lo `test -f 'ctr_drbg.c' || echo '$(srcdir)/'`ctr_drbg.c

libpolarssl_la-debug.lo: debug.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-debug.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-debug.Tpo -c -o libpolarssl_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-debug.Tpo $(DEPDIR)/libpolarssl_la-debug.Plo
#	$(AM_V_CC)source='debug.c' object='libpolarssl_la-debug.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

libpolarssl_la-des.lo: des.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-des.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-des.Tpo -c -o libpolarssl_la-des.lo `test -f 'des.c' || echo '$(srcdir)/'`des.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-des.Tpo $(DEPDIR)/libpolarssl_la-des.Plo
#	$(AM_V_CC)source='des.c' object='libpolarssl_la-des.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-des.lo `test -f 'des.c' || echo '$(srcdir)/'`des.c

libpolarssl_la-dhm.lo: dhm.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-dhm.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-dhm.Tpo -c -o libpolarssl_la-dhm.lo `test -f 'dhm.c' || echo '$(srcdir)/'`dhm.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-dhm.Tpo $(DEPDIR)/libpolarssl_la-dhm.Plo
#	$(AM_V_CC)source='dhm.c' object='libpolarssl_la-dhm.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-dhm.lo `test -f 'dhm.c' || echo '$(srcdir)/'`dhm.c

libpolarssl_la-ecdh.lo: ecdh.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ecdh.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ecdh.Tpo -c -o libpolarssl_la-ecdh.lo `test -f 'ecdh.c' || echo '$(srcdir)/'`ecdh.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ecdh.Tpo $(DEPDIR)/libpolarssl_la-ecdh.Plo
#	$(AM_V_CC)source='ecdh.c' object='libpolarssl_la-ecdh.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ecdh.lo `test -f 'ecdh.c' || echo '$(srcdir)/'`ecdh.c

libpolarssl_la-ecdsa.lo: ecdsa.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ecdsa.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ecdsa.Tpo -c -o libpolarssl_la-ecdsa.lo `test -f 'ecdsa.c' || echo '$(srcdir)/'`ecdsa.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ecdsa.Tpo $(DEPDIR)/libpolarssl_la-ecdsa.Plo
#	$(AM_V_CC)source='ecdsa.c' object='libpolarssl_la-ecdsa.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ecdsa.lo `test -f 'ecdsa.c' || echo '$(srcdir)/'`ecdsa.c

libpolarssl_la-ecp.lo: ecp.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ecp.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ecp.Tpo -c -o libpolarssl_la-ecp.lo `test -f 'ecp.c' || echo '$(srcdir)/'`ecp.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ecp.Tpo $(DEPDIR)/libpolarssl_la-ecp.Plo
#	$(AM_V_CC)source='ecp.c' object='libpolarssl_la-ecp.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ecp.lo `test -f 'ecp.c' || echo '$(srcdir)/'`ecp.c

libpolarssl_la-entropy.lo: entropy.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-entropy.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-entropy.Tpo -c -o libpolarssl_la-entropy.lo `test -f 'entropy.c' || echo '$(srcdir)/'`entropy.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-entropy.Tpo $(DEPDIR)/libpolarssl_la-entropy.Plo
#	$(AM_V_CC)source='entropy.c' object='libpolarssl_la-entropy.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-entropy.lo `test -f 'entropy.c' || echo '$(srcdir)/'`entropy.c

libpolarssl_la-entropy_poll.lo: entropy_poll.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-entropy_poll.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-entropy_poll.Tpo -c -o libpolarssl_la-entropy_poll.lo `test -f 'entropy_poll.c' || echo '$(srcdir)/'`entropy_poll.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-entropy_poll.Tpo $(DEPDIR)/libpolarssl_la-entropy_poll.Plo
#	$(AM_V_CC)source='entropy_poll.c' object='libpolarssl_la-entropy_poll.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-entropy_poll.lo `test -f 'entropy_poll.c' || echo '$(srcdir)/'`entropy_poll.c

libpolarssl_la-error.lo: error.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-error.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-error.Tpo -c -o libpolarssl_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-error.Tpo $(DEPDIR)/libpolarssl_la-error.Plo
#	$(AM_V_CC)source='error.c' object='libpolarssl_la-error.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libpolarssl_la-gcm.lo: gcm.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-gcm.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-gcm.Tpo -c -o libpolarssl_la-gcm.lo `test -f 'gcm.c' || echo '$(srcdir)/'`gcm.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-gcm.Tpo $(DEPDIR)/libpolarssl_la-gcm.Plo
#	$(AM_V_CC)source='gcm.c' object='libpolarssl_la-gcm.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-gcm.lo `test -f 'gcm.c' || echo '$(srcdir)/'`gcm.c

libpolarssl_la-havege.lo: havege.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-havege.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-havege.Tpo -c -o libpolarssl_la-havege.lo `test -f 'havege.c' || echo '$(srcdir)/'`havege.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-havege.Tpo $(DEPDIR)/libpolarssl_la-havege.Plo
#	$(AM_V_CC)source='havege.c' object='libpolarssl_la-havege.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-havege.lo `test -f 'havege.c' || echo '$(srcdir)/'`havege.c

libpolarssl_la-md2.lo: md2.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-md2.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-md2.Tpo -c -o libpolarssl_la-md2.lo `test -f 'md2.c' || echo '$(srcdir)/'`md2.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-md2.Tpo $(DEPDIR)/libpolarssl_la-md2.Plo
#	$(AM_V_CC)source='md2.c' object='libpolarssl_la-md2.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-md2.lo `test -f 'md2.c' || echo '$(srcdir)/'`md2.c

libpolarssl_la-md4.lo: md4.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-md4.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-md4.Tpo -c -o libpolarssl_la-md4.lo `test -f 'md4.c' || echo '$(srcdir)/'`md4.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-md4.Tpo $(DEPDIR)/libpolarssl_la-md4.Plo
#	$(AM_V_CC)source='md4.c' object='libpolarssl_la-md4.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-md4.lo `test -f 'md4.c' || echo '$(srcdir)/'`md4.c

libpolarssl_la-md5.lo: md5.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-md5.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-md5.Tpo -c -o libpolarssl_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-md5.Tpo $(DEPDIR)/libpolarssl_la-md5.Plo
#	$(AM_V_CC)source='md5.c' object='libpolarssl_la-md5.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libpolarssl_la-md.lo: md.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-md.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-md.Tpo -c -o libpolarssl_la-md.lo `test -f 'md.c' || echo '$(srcdir)/'`md.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-md.Tpo $(DEPDIR)/libpolarssl_la-md.Plo
#	$(AM_V_CC)source='md.c' object='libpolarssl_la-md.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-md.lo `test -f 'md.c' || echo '$(srcdir)/'`md.c

libpolarssl_la-md_wrap.lo: md_wrap.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-md_wrap.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-md_wrap.Tpo -c -o libpolarssl_la-md_wrap.lo `test -f 'md_wrap.c' || echo '$(srcdir)/'`md_wrap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-md_wrap.Tpo $(DEPDIR)/libpolarssl_la-md_wrap.Plo
#	$(AM_V_CC)source='md_wrap.c' object='libpolarssl_la-md_wrap.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-md_wrap.lo `test -f 'md_wrap.c' || echo '$(srcdir)/'`md_wrap.c

libpolarssl_la-memory_buffer_alloc.lo: memory_buffer_alloc.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-memory_buffer_alloc.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-memory_buffer_alloc.Tpo -c -o libpolarssl_la-memory_buffer_alloc.lo `test -f 'memory_buffer_alloc.c' || echo '$(srcdir)/'`memory_buffer_alloc.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-memory_buffer_alloc.Tpo $(DEPDIR)/libpolarssl_la-memory_buffer_alloc.Plo
#	$(AM_V_CC)source='memory_buffer_alloc.c' object='libpolarssl_la-memory_buffer_alloc.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-memory_buffer_alloc.lo `test -f 'memory_buffer_alloc.c' || echo '$(srcdir)/'`memory_buffer_alloc.c

libpolarssl_la-memory.lo: memory.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-memory.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-memory.Tpo -c -o libpolarssl_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-memory.Tpo $(DEPDIR)/libpolarssl_la-memory.Plo
#	$(AM_V_CC)source='memory.c' object='libpolarssl_la-memory.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

libpolarssl_la-net.lo: net.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-net.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-net.Tpo -c -o libpolarssl_la-net.lo `test -f 'net.c' || echo '$(srcdir)/'`net.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-net.Tpo $(DEPDIR)/libpolarssl_la-net.Plo
#	$(AM_V_CC)source='net.c' object='libpolarssl_la-net.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-net.lo `test -f 'net.c' || echo '$(srcdir)/'`net.c

libpolarssl_la-oid.lo: oid.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-oid.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-oid.Tpo -c -o libpolarssl_la-oid.lo `test -f 'oid.c' || echo '$(srcdir)/'`oid.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-oid.Tpo $(DEPDIR)/libpolarssl_la-oid.Plo
#	$(AM_V_CC)source='oid.c' object='libpolarssl_la-oid.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-oid.lo `test -f 'oid.c' || echo '$(srcdir)/'`oid.c

libpolarssl_la-padlock.lo: padlock.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-padlock.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-padlock.Tpo -c -o libpolarssl_la-padlock.lo `test -f 'padlock.c' || echo '$(srcdir)/'`padlock.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-padlock.Tpo $(DEPDIR)/libpolarssl_la-padlock.Plo
#	$(AM_V_CC)source='padlock.c' object='libpolarssl_la-padlock.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-padlock.lo `test -f 'padlock.c' || echo '$(srcdir)/'`padlock.c

libpolarssl_la-pbkdf2.lo: pbkdf2.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pbkdf2.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pbkdf2.Tpo -c -o libpolarssl_la-pbkdf2.lo `test -f 'pbkdf2.c' || echo '$(srcdir)/'`pbkdf2.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pbkdf2.Tpo $(DEPDIR)/libpolarssl_la-pbkdf2.Plo
#	$(AM_V_CC)source='pbkdf2.c' object='libpolarssl_la-pbkdf2.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pbkdf2.lo `test -f 'pbkdf2.c' || echo '$(srcdir)/'`pbkdf2.c

libpolarssl_la-pem.lo: pem.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pem.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pem.Tpo -c -o libpolarssl_la-pem.lo `test -f 'pem.c' || echo '$(srcdir)/'`pem.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pem.Tpo $(DEPDIR)/libpolarssl_la-pem.Plo
#	$(AM_V_CC)source='pem.c' object='libpolarssl_la-pem.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pem.lo `test -f 'pem.c' || echo '$(srcdir)/'`pem.c

libpolarssl_la-pk.lo: pk.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pk.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pk.Tpo -c -o libpolarssl_la-pk.lo `test -f 'pk.c' || echo '$(srcdir)/'`pk.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pk.Tpo $(DEPDIR)/libpolarssl_la-pk.Plo
#	$(AM_V_CC)source='pk.c' object='libpolarssl_la-pk.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pk.lo `test -f 'pk.c' || echo '$(srcdir)/'`pk.c

libpolarssl_la-pkcs11.lo: pkcs11.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pkcs11.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pkcs11.Tpo -c -o libpolarssl_la-pkcs11.lo `test -f 'pkcs11.c' || echo '$(srcdir)/'`pkcs11.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pkcs11.Tpo $(DEPDIR)/libpolarssl_la-pkcs11.Plo
#	$(AM_V_CC)source='pkcs11.c' object='libpolarssl_la-pkcs11.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pkcs11.lo `test -f 'pkcs11.c' || echo '$(srcdir)/'`pkcs11.c

libpolarssl_la-pkcs12.lo: pkcs12.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pkcs12.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pkcs12.Tpo -c -o libpolarssl_la-pkcs12.lo `test -f 'pkcs12.c' || echo '$(srcdir)/'`pkcs12.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pkcs12.Tpo $(DEPDIR)/libpolarssl_la-pkcs12.Plo
#	$(AM_V_CC)source='pkcs12.c' object='libpolarssl_la-pkcs12.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pkcs12.lo `test -f 'pkcs12.c' || echo '$(srcdir)/'`pkcs12.c

libpolarssl_la-pkcs5.lo: pkcs5.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pkcs5.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pkcs5.Tpo -c -o libpolarssl_la-pkcs5.lo `test -f 'pkcs5.c' || echo '$(srcdir)/'`pkcs5.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pkcs5.Tpo $(DEPDIR)/libpolarssl_la-pkcs5.Plo
#	$(AM_V_CC)source='pkcs5.c' object='libpolarssl_la-pkcs5.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pkcs5.lo `test -f 'pkcs5.c' || echo '$(srcdir)/'`pkcs5.c

libpolarssl_la-pkparse.lo: pkparse.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pkparse.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pkparse.Tpo -c -o libpolarssl_la-pkparse.lo `test -f 'pkparse.c' || echo '$(srcdir)/'`pkparse.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pkparse.Tpo $(DEPDIR)/libpolarssl_la-pkparse.Plo
#	$(AM_V_CC)source='pkparse.c' object='libpolarssl_la-pkparse.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pkparse.lo `test -f 'pkparse.c' || echo '$(srcdir)/'`pkparse.c

libpolarssl_la-pk_wrap.lo: pk_wrap.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pk_wrap.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pk_wrap.Tpo -c -o libpolarssl_la-pk_wrap.lo `test -f 'pk_wrap.c' || echo '$(srcdir)/'`pk_wrap.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pk_wrap.Tpo $(DEPDIR)/libpolarssl_la-pk_wrap.Plo
#	$(AM_V_CC)source='pk_wrap.c' object='libpolarssl_la-pk_wrap.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pk_wrap.lo `test -f 'pk_wrap.c' || echo '$(srcdir)/'`pk_wrap.c

libpolarssl_la-pkwrite.lo: pkwrite.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-pkwrite.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-pkwrite.Tpo -c -o libpolarssl_la-pkwrite.lo `test -f 'pkwrite.c' || echo '$(srcdir)/'`pkwrite.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-pkwrite.Tpo $(DEPDIR)/libpolarssl_la-pkwrite.Plo
#	$(AM_V_CC)source='pkwrite.c' object='libpolarssl_la-pkwrite.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-pkwrite.lo `test -f 'pkwrite.c' || echo '$(srcdir)/'`pkwrite.c

libpolarssl_la-rsa.lo: rsa.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-rsa.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-rsa.Tpo -c -o libpolarssl_la-rsa.lo `test -f 'rsa.c' || echo '$(srcdir)/'`rsa.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-rsa.Tpo $(DEPDIR)/libpolarssl_la-rsa.Plo
#	$(AM_V_CC)source='rsa.c' object='libpolarssl_la-rsa.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-rsa.lo `test -f 'rsa.c' || echo '$(srcdir)/'`rsa.c

libpolarssl_la-sha1.lo: sha1.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-sha1.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-sha1.Tpo -c -o libpolarssl_la-sha1.lo `test -f 'sha1.c' || echo '$(srcdir)/'`sha1.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-sha1.Tpo $(DEPDIR)/libpolarssl_la-sha1.Plo
#	$(AM_V_CC)source='sha1.c' object='libpolarssl_la-sha1.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-sha1.lo `test -f 'sha1.c' || echo '$(srcdir)/'`sha1.c

libpolarssl_la-sha256.lo: sha256.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-sha256.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-sha256.Tpo -c -o libpolarssl_la-sha256.lo `test -f 'sha256.c' || echo '$(srcdir)/'`sha256.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-sha256.Tpo $(DEPDIR)/libpolarssl_la-sha256.Plo
#	$(AM_V_CC)source='sha256.c' object='libpolarssl_la-sha256.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-sha256.lo `test -f 'sha256.c' || echo '$(srcdir)/'`sha256.c

libpolarssl_la-sha512.lo: sha512.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-sha512.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-sha512.Tpo -c -o libpolarssl_la-sha512.lo `test -f 'sha512.c' || echo '$(srcdir)/'`sha512.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-sha512.Tpo $(DEPDIR)/libpolarssl_la-sha512.Plo
#	$(AM_V_CC)source='sha512.c' object='libpolarssl_la-sha512.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-sha512.lo `test -f 'sha512.c' || echo '$(srcdir)/'`sha512.c

libpolarssl_la-ssl_cache.lo: ssl_cache.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ssl_cache.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ssl_cache.Tpo -c -o libpolarssl_la-ssl_cache.lo `test -f 'ssl_cache.c' || echo '$(srcdir)/'`ssl_cache.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ssl_cache.Tpo $(DEPDIR)/libpolarssl_la-ssl_cache.Plo
#	$(AM_V_CC)source='ssl_cache.c' object='libpolarssl_la-ssl_cache.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ssl_cache.lo `test -f 'ssl_cache.c' || echo '$(srcdir)/'`ssl_cache.c

libpolarssl_la-ssl_ciphersuites.lo: ssl_ciphersuites.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ssl_ciphersuites.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ssl_ciphersuites.Tpo -c -o libpolarssl_la-ssl_ciphersuites.lo `test -f 'ssl_ciphersuites.c' || echo '$(srcdir)/'`ssl_ciphersuites.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ssl_ciphersuites.Tpo $(DEPDIR)/libpolarssl_la-ssl_ciphersuites.Plo
#	$(AM_V_CC)source='ssl_ciphersuites.c' object='libpolarssl_la-ssl_ciphersuites.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ssl_ciphersuites.lo `test -f 'ssl_ciphersuites.c' || echo '$(srcdir)/'`ssl_ciphersuites.c

libpolarssl_la-ssl_cli.lo: ssl_cli.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ssl_cli.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ssl_cli.Tpo -c -o libpolarssl_la-ssl_cli.lo `test -f 'ssl_cli.c' || echo '$(srcdir)/'`ssl_cli.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ssl_cli.Tpo $(DEPDIR)/libpolarssl_la-ssl_cli.Plo
#	$(AM_V_CC)source='ssl_cli.c' object='libpolarssl_la-ssl_cli.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ssl_cli.lo `test -f 'ssl_cli.c' || echo '$(srcdir)/'`ssl_cli.c

libpolarssl_la-ssl_srv.lo: ssl_srv.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ssl_srv.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ssl_srv.Tpo -c -o libpolarssl_la-ssl_srv.lo `test -f 'ssl_srv.c' || echo '$(srcdir)/'`ssl_srv.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ssl_srv.Tpo $(DEPDIR)/libpolarssl_la-ssl_srv.Plo
#	$(AM_V_CC)source='ssl_srv.c' object='libpolarssl_la-ssl_srv.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ssl_srv.lo `test -f 'ssl_srv.c' || echo '$(srcdir)/'`ssl_srv.c

libpolarssl_la-ssl_tls.lo: ssl_tls.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-ssl_tls.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-ssl_tls.Tpo -c -o libpolarssl_la-ssl_tls.lo `test -f 'ssl_tls.c' || echo '$(srcdir)/'`ssl_tls.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-ssl_tls.Tpo $(DEPDIR)/libpolarssl_la-ssl_tls.Plo
#	$(AM_V_CC)source='ssl_tls.c' object='libpolarssl_la-ssl_tls.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-ssl_tls.lo `test -f 'ssl_tls.c' || echo '$(srcdir)/'`ssl_tls.c

libpolarssl_la-threading.lo: threading.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-threading.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-threading.Tpo -c -o libpolarssl_la-threading.lo `test -f 'threading.c' || echo '$(srcdir)/'`threading.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-threading.Tpo $(DEPDIR)/libpolarssl_la-threading.Plo
#	$(AM_V_CC)source='threading.c' object='libpolarssl_la-threading.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-threading.lo `test -f 'threading.c' || echo '$(srcdir)/'`threading.c

libpolarssl_la-timing.lo: timing.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-timing.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-timing.Tpo -c -o libpolarssl_la-timing.lo `test -f 'timing.c' || echo '$(srcdir)/'`timing.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-timing.Tpo $(DEPDIR)/libpolarssl_la-timing.Plo
#	$(AM_V_CC)source='timing.c' object='libpolarssl_la-timing.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-timing.lo `test -f 'timing.c' || echo '$(srcdir)/'`timing.c

libpolarssl_la-version.lo: version.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-version.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-version.Tpo -c -o libpolarssl_la-version.lo `test -f 'version.c' || echo '$(srcdir)/'`version.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-version.Tpo $(DEPDIR)/libpolarssl_la-version.Plo
#	$(AM_V_CC)source='version.c' object='libpolarssl_la-version.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-version.lo `test -f 'version.c' || echo '$(srcdir)/'`version.c

libpolarssl_la-x509.lo: x509.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509.Tpo -c -o libpolarssl_la-x509.lo `test -f 'x509.c' || echo '$(srcdir)/'`x509.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509.Tpo $(DEPDIR)/libpolarssl_la-x509.Plo
#	$(AM_V_CC)source='x509.c' object='libpolarssl_la-x509.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509.lo `test -f 'x509.c' || echo '$(srcdir)/'`x509.c

libpolarssl_la-x509_create.lo: x509_create.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509_create.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509_create.Tpo -c -o libpolarssl_la-x509_create.lo `test -f 'x509_create.c' || echo '$(srcdir)/'`x509_create.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509_create.Tpo $(DEPDIR)/libpolarssl_la-x509_create.Plo
#	$(AM_V_CC)source='x509_create.c' object='libpolarssl_la-x509_create.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509_create.lo `test -f 'x509_create.c' || echo '$(srcdir)/'`x509_create.c

libpolarssl_la-x509_crl.lo: x509_crl.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509_crl.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509_crl.Tpo -c -o libpolarssl_la-x509_crl.lo `test -f 'x509_crl.c' || echo '$(srcdir)/'`x509_crl.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509_crl.Tpo $(DEPDIR)/libpolarssl_la-x509_crl.Plo
#	$(AM_V_CC)source='x509_crl.c' object='libpolarssl_la-x509_crl.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509_crl.lo `test -f 'x509_crl.c' || echo '$(srcdir)/'`x509_crl.c

libpolarssl_la-x509_crt.lo: x509_crt.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509_crt.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509_crt.Tpo -c -o libpolarssl_la-x509_crt.lo `test -f 'x509_crt.c' || echo '$(srcdir)/'`x509_crt.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509_crt.Tpo $(DEPDIR)/libpolarssl_la-x509_crt.Plo
#	$(AM_V_CC)source='x509_crt.c' object='libpolarssl_la-x509_crt.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509_crt.lo `test -f 'x509_crt.c' || echo '$(srcdir)/'`x509_crt.c

libpolarssl_la-x509_csr.lo: x509_csr.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509_csr.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509_csr.Tpo -c -o libpolarssl_la-x509_csr.lo `test -f 'x509_csr.c' || echo '$(srcdir)/'`x509_csr.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509_csr.Tpo $(DEPDIR)/libpolarssl_la-x509_csr.Plo
#	$(AM_V_CC)source='x509_csr.c' object='libpolarssl_la-x509_csr.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509_csr.lo `test -f 'x509_csr.c' || echo '$(srcdir)/'`x509_csr.c

libpolarssl_la-x509write_crt.lo: x509write_crt.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509write_crt.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509write_crt.Tpo -c -o libpolarssl_la-x509write_crt.lo `test -f 'x509write_crt.c' || echo '$(srcdir)/'`x509write_crt.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509write_crt.Tpo $(DEPDIR)/libpolarssl_la-x509write_crt.Plo
#	$(AM_V_CC)source='x509write_crt.c' object='libpolarssl_la-x509write_crt.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509write_crt.lo `test -f 'x509write_crt.c' || echo '$(srcdir)/'`x509write_crt.c

libpolarssl_la-x509write_csr.lo: x509write_csr.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-x509write_csr.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-x509write_csr.Tpo -c -o libpolarssl_la-x509write_csr.lo `test -f 'x509write_csr.c' || echo '$(srcdir)/'`x509write_csr.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-x509write_csr.Tpo $(DEPDIR)/libpolarssl_la-x509write_csr.Plo
#	$(AM_V_CC)source='x509write_csr.c' object='libpolarssl_la-x509write_csr.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-x509write_csr.lo `test -f 'x509write_csr.c' || echo '$(srcdir)/'`x509write_csr.c

libpolarssl_la-xtea.lo: xtea.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpolarssl_la-xtea.lo -MD -MP -MF $(DEPDIR)/libpolarssl_la-xtea.Tpo -c -o libpolarssl_la-xtea.lo `test -f 'xtea.c' || echo '$(srcdir)/'`xtea.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarssl_la-xtea.Tpo $(DEPDIR)/libpolarssl_la-xtea.Plo
#	$(AM_V_CC)source='xtea.c' object='libpolarssl_la-xtea.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpolarssl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpolarssl_la-xtea.lo `test -f 'xtea.c' || echo '$(srcdir)/'`xtea.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
