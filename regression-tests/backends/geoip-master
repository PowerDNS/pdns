case $context in
	geoipbackend|geoipbackend-nsec3-narrow)
		set +e
                if test "x$geoipregion" = "x"; then
                        echo "This test suite requires that you provide geoipregion which defines the region name produced by MaxMind database with geoipregionip address."
                        exit 1
                fi
                if test "x$geoipregionip" = "x"; then
                        echo "This test suite requires that you have IP address bound to localhost interface and exported as variable geoipregionip"
                        exit 1
                fi
	 	ping -q -c1 -W1 -t1 -Ilo $geoipregionip 2>&1 >/dev/null 
		if test $? -ne 0; then
			echo "This test suite requires that you have $geoipregionip bound to localhost interface"
			exit 1
		fi
		set -e
                testsdir=../modules/geoipbackend/regression-tests/
		if test "$context" = "geoipbackend-nsec3-narrow"; then
                  narrow="narrow"
                  extracontexts="dnssec nsec3 narrow"
                  skipreasons="narrow nsec3 nodyndns"
                  geoipdosec="yes"
                  geoipkeydir="geoip-dnssec-keydir=$testsdir/geosec"
                  rm -rf $testsdir/geosec
                  mkdir -p $testsdir/geosec
                else
                  skipreasons="nonarrow nonsec3 nodyndns nodnssec"
                fi
		cat > $testsdir/geo.yaml <<EOF
domains:
- domain: geo.example.com
  ttl: 30
  records:
    geo.example.com:
      - soa: ns1.example.com hostmaster.example.com 2014090125 7200 3600 1209600 3600
      - ns: ns1.example.com
      - ns: ns2.example.com
      - mx: 10 mx.example.com
    $geoipregion.service.geo.example.com:
      - a: 62.236.200.4
    unknown.service.geo.example.com:
      - a: 127.0.0.1
  services:
    www.geo.example.com: '%cn.service.geo.example.com'
    indirect.geo.example.com: '%cn.elsewhere.example.com'
EOF
		cat > $testsdir/region-a-resolution/expected_result <<EOF
0	www.geo.example.com.	IN	A	30	62.236.200.4
Rcode: 0, RD: 0, QR: 1, TC: 0, AA: 1, opcode: 0
Reply to question for qname='www.geo.example.com.', qtype=A
EOF
                cat > $testsdir/region-cname-resolution/expected_result <<EOF
0	indirect.geo.example.com.	IN	CNAME	30	$geoipregion.elsewhere.example.com.
Rcode: 0, RD: 0, QR: 1, TC: 0, AA: 1, opcode: 0
Reply to question for qname='indirect.geo.example.com.', qtype=A
EOF
		# generate pdns.conf for pdnssec
		cat > pdns-geoip.conf <<EOF
module-dir=./modules
launch=geoip
geoip-zones-file=$testsdir/geo.yaml
EOF

		if [ "$geoipdosec" = "yes" ]
		then
			echo "$geoipkeydir" >> pdns-geoip.conf
			../pdns/pdnssec --config-dir=. --config-name=geoip secure-zone geo.example.com
			geoipkeydir="--geoip-dnssec-keydir=$testsdir/geosec"
		fi

		$RUNWRAPPER $PDNS --daemon=no --local-port=$port --socket-dir=./ \
			--no-shuffle --launch=geoip \
			--cache-ttl=$cachettl --experimental-dname-processing --no-config \
			--distributor-threads=1 \
                        --geoip-zones-file=$testsdir/geo.yaml --module-dir=./modules \
			$geoipkeydir &
		;;

	*)
		nocontext=yes
esac
