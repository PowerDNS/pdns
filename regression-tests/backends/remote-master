case $context in
	remotebackend-*)
		remotetype=$(echo $context | cut -d- -f 2)
		remotesec=$(echo $context | cut -d- -f 3)
		narrow=$(echo $context | cut -d- -f 4)
		testsdir=../modules/remotebackend/regression-tests/

		if [ ! -d $testsdir/../venv ]; then
			python3 -m venv $testsdir/../venv
			source $testsdir/../venv/bin/activate
			pip install -U wheel
			pip install -r $testsdir/../requirements.txt
		else
			source $testsdir/../venv/bin/activate
		fi

		# cleanup unbound-host.conf to avoid failures
		rm -f unbound-host.conf

		echo "Setting up test database..."
		# setup test database
		rm -f $testsdir/remote.sqlite3
		sqlite3 $testsdir/remote.sqlite3 < $testsdir/test-schema.sql
		chmod 0666 $testsdir/remote.sqlite3

		case $remotetype in
		http)
			connstr="http:url=http://localhost:62434/dns"
			rm -f remotebackend-server.log
			rm -f remotebackend-access.log
			$testsdir/http-backend.py &
			echo $! > pdns-remotebackend.pid
			set +e
			# make sure it runs before continuing
			loopcount=0
			while [ $loopcount -lt 20 ]; do
				res=$(curl http://localhost:62434/ping 2>/dev/null)
				if [ "x$res" == "xpong" ]
				then
					break
				fi
				sleep 1
				let loopcount=loopcount+1
			done
			set -e
			;;
		zeromq)
			connstr="zeromq:endpoint=ipc:///tmp/pdns.0"
			$testsdir/zeromq-backend.py &
			echo $! > pdns-remotebackend.pid
			;;
		unix)
			connstr="unix:path=$testsdir/remote.socket"
                        rm -f $testsdir/remote.socket
			socat unix-listen:$testsdir/remote.socket,fork exec:$testsdir/unix-backend.py &
			echo $! > pdns-remotebackend.pid
			;;
		pipe)
			connstr="pipe:command=$testsdir/pipe-backend.py"
			;;
		*)
			echo "Invalid usage"
			exit
			;;
		esac

		skipreasons="nodnssec nodyndns"

		if [ "$remotesec" = "nsec3" ]
		then
			remotedosec="yes"
			if [ "$narrow" = "narrow" ]
			then
				extracontexts="dnssec nsec3 narrow"
				skipreasons="narrow nsec3 nodyndns"
			else
				extracontexts="dnssec nsec3"
				skipreasons="nsec3 nodyndns"
			fi
			
			remote_add_param="--remote-dnssec=yes"
		elif [ "$remotesec" = "dnssec" ]
		then
			remotedosec="yes"
			remote_add_param="--remote-dnssec=yes"
			extracontexts="dnssec"
			skipreasons="nonsec3 nonarrow nodyndns"
		fi


		# generate pdns.conf for pdnsutil
		cat > pdns-remote.conf <<EOF
module-dir=./modules
launch=remote
remote-connection-string=$connstr,timeout=10000
EOF

		if [ "$remotedosec" = "yes" ]
		then
			echo "remote-dnssec=yes" >> pdns-remote.conf
			$PDNSUTIL --config-dir=. --config-name=remote secure-zone example.com
			$PDNSUTIL --config-dir=. --config-name=remote secure-zone up.example.com

			./gsql_feed_ds.pl up.example.com. example.com. "$PDNSUTIL --config-dir=. --config-name=remote" "sqlite3 $testsdir/remote.sqlite3"

			# fix dot
			sqlite3 $testsdir/remote.sqlite3 "UPDATE records SET name = 'up.example.com.' WHERE name = 'up.example.com'"

			if [ "$remotesec" = "nsec3" ]
			then
				$PDNSUTIL --config-dir=. --config-name=remote set-nsec3 example.com
				$PDNSUTIL --config-dir=. --config-name=remote set-nsec3 up.example.com
			fi

			# add DS records into list-all-records
                        $PDNSUTIL --config-dir=. --config-name=remote show-zone -v up.example.com | gawk '{ if ($1=="DS") { printf "up.example.com.		120	IN	DS	" $6 " " $7 " " $8 " " substr(toupper($9),0,56); if (length($9)>56) { print " " substr(toupper($9),57) } else { print "" } } }' > $testsdir/list-all-records/expected_dnssec_part2
			cat $testsdir/list-all-records/expected_dnssec_part1 $testsdir/list-all-records/expected_dnssec_part2 $testsdir/list-all-records/expected_dnssec_part3 > $testsdir/list-all-records/expected_result.dnssec 
			cp -f $testsdir/list-all-records/expected_result.dnssec $testsdir/list-all-records/expected_result.nsec3
		fi

		$RUNWRAPPER $PDNS --daemon=no --local-address=$address --local-port=$port --socket-dir=./ \
			--no-shuffle --launch=remote \
			--cache-ttl=$cachettl --dname-processing --no-config \
			--distributor-threads=1 \
			--dnsupdate=yes --zone-cache-refresh-interval=0 \
			--remote-connection-string="$connstr" $remote_add_param --module-dir=./modules &
		;;

	*)
		nocontext=yes
esac
