	context=${context}-presigned-lmdb
	cat > pdns-lmdb2.conf << __EOF__
module-dir=./modules
launch=lmdb
lmdb-filename=./pdns2.lmdb
__EOF__

	rm -f pdns2.lmdb*
	zones=0
	for zone in $(grep 'zone ' named.conf  | cut -f2 -d\" | grep -v '^nztest.com$' | perl -e 'print reverse <STDIN>')
	do
		let zones=zones+1
		$PDNSUTIL --config-dir=. --config-name=lmdb2 create-slave-zone $zone 127.0.0.1:$port
		if [ "$zone" = "tsig.com" ]; then
			$PDNSUTIL --config-dir=. --config-name=lmdb2 import-tsig-key test $ALGORITHM $KEY
			$PDNSUTIL --config-dir=. --config-name=lmdb2 activate-tsig-key tsig.com test slave
		fi
		if [ "$zone" = "stest.com" ]; then
			if [[ $skipreasons != *nolua* ]]; then
				$PDNSUTIL --config-dir=. --config-name=lmdb2 set-meta stest.com AXFR-SOURCE 127.0.0.2
			fi
		fi
	done

	port=$((port+100))

	$RUNWRAPPER $PDNS2 --daemon=no --local-port=$port --config-dir=. \
		--config-name=lmdb2 --socket-dir=./ --no-shuffle \
		--slave --dname-processing --api --api-key=secret &

	echo 'waiting for zones to be slaved'
	loopcount=0
	while [ $loopcount -lt 30 ]
	do
		sleep 5
		present=$(curl -s -S -H 'X-API-Key: secret' http://127.0.0.1:8081/api/v1/servers/localhost/zones  | jq -r '.[] | .serial' | grep -c -v '^0$')
		if [ $zones -eq $present ]
		then
			break
		fi
		let loopcount=loopcount+1
	done
	if [ $zones -ne $present ]
	then
		echo "AXFR FAILED" >> failed_tests
		exit
	fi
