case $context in
	oracle-nodnssec | oracle | oracle-nsec3)
		[ -z "$ORACLEUSER" ] && ORACLEUSER=pdns
		[ -z "$ORACLEPASSWD" ] && ORACLEPASSWD=pdns

		echo "START ../modules/oraclebackend/drop-schema.oracle.sql;" | sqlplus -S $ORACLEUSER/$ORACLEPASSWD@xe > oracle.log
		echo "START ../modules/oraclebackend/schema.oracle.sql;" | sqlplus -S $ORACLEUSER/$ORACLEPASSWD@xe >> oracle.log
		../pdns/zone2sql --oracle | grep -v 'INSERT INTO Records' | sqlplus -S $ORACLEUSER/$ORACLEPASSWD@xe >> oracle.log
		../pdns/zone2sql --oracle | grep " 'SOA', " | sqlplus -S $ORACLEUSER/$ORACLEPASSWD@xe >> oracle.log

		cat > pdns-oracle.conf << __EOF__
module-dir=./modules
launch=oracle
oracle-home=$ORACLE_HOME
oracle-sid=$ORACLE_SID
oracle-nls-lang=$NLS_LANG

oracle-pool-database=xe
oracle-pool-username=$ORACLEUSER
oracle-pool-password=$ORACLEPASSWD
oracle-master-database=xe
oracle-master-username=$ORACLEUSER
oracle-master-password=$ORACLEPASSWD
__EOF__

		if [ $context != oracle-nodnssec ]
		then
			echo "oracle-dnssec" >> pdns-oracle.conf
		fi

		if [ $context != oracle-nodnssec ]
		then
			for zone in $(grep 'zone ' named.conf  | cut -f2 -d\")
			do
				securezone $zone oracle
				if [ $context = oracle-nsec3 ]
				then
					../pdns/pdnssec --config-dir=. --config-name=oracle set-nsec3 $zone "1 0 1 abcd" 2>&1
				fi
			done
		fi

		echo "TRUNCATE TABLE records;" | sqlplus -S $ORACLEUSER/$ORACLEPASSWD@xe >> oracle.log
		../pdns/zone2sql --oracle | grep -v 'INSERT INTO Zones' | sqlplus -S $ORACLEUSER/$ORACLEPASSWD@xe >> oracle.log

		../pdns/pdnssec --config-dir=. --config-name=oracle import-tsig-key test $ALGORITHM $KEY
		../pdns/pdnssec --config-dir=. --config-name=oracle activate-tsig-key tsig.com test master

		$RUNWRAPPER $PDNS --daemon=no --local-port=$port --config-dir=. \
			--config-name=oracle --socket-dir=./ --no-shuffle \
			--send-root-referral --query-logging \
			--cache-ttl=$cachettl --experimental-dname-processing $lua_prequery &

		if [ $context = oracle-nsec3 ]
		then
			skipreasons="nodyndns oracle-nsec3"
			extracontexts="dnssec nsec3"
		elif [ $context = oracle-nodnssec ]
		then
			skipreasons="nodyndns nodnssec"
		else
			skipreasons="nodyndns oracle-nsec"
			extracontexts="dnssec"
		fi
		skipreasons="$skipreasons noent noaxfr" # TODO add ent support to oracle backend
		;;

	*)
		nocontext=yes
esac
