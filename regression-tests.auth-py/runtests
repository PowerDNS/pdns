#!/usr/bin/env bash
set -e

if [ ! -d .venv ]; then
    python3 -m venv .venv
fi

. .venv/bin/activate
python -V
pip install -q -r requirements.txt | cat

mkdir -p configs

[ -f ./vars ] && . ./vars

if [ -z "$PDNS_BUILD_PATH" ]; then
  # PDNS_BUILD_PATH is unset or empty. Assume an autotools build.
  PDNS_BUILD_PATH=.

  export PDNS=${PDNS:-${PWD}/../pdns/pdns_server}
  export PDNSUTIL=${PDNSUTIL:-${PWD}/../pdns/pdnsutil}
  export PDNSCONTROL=${PDNSCONTROL:-${PWD}/../pdns/pdns_control}
  export PDNS_MODULE_DIR=${PDNS_MODULE_DIR:-${PWD}/modules}
else
  export PDNS=${PDNS:-$PDNS_BUILD_PATH/pdns-auth}
  export PDNSUTIL=${PDNSUTIL:-$PDNS_BUILD_PATH/pdns-auth-util}
  export PDNSCONTROL=${PDNSCONTROL:-$PDNS_BUILD_PATH/pdns-auth-control}
  export PDNS_MODULE_DIR=${PDNS_MODULE_DIR:-$PDNS_BUILD_PATH/modules}
fi

export PREFIX=127.0.0

for bin in "$PDNS" "$PDNSUTIL"; do
    if [ -n "$bin" -a ! -e "$bin" ]; then
        echo "E: Required binary $bin not found. Please install the binary and/or edit ./vars."
        exit 1
  fi
done

if [ "${PDNS_DEBUG}" = "YES" ]; then
  set -x
fi

ignore="--ignore=test_GSSTSIG.py"
if [ "${WITHKERBEROS}" = "YES" ]; then
    ignore=""
    (cd kerberos-server && sudo docker compose up --detach --build)
fi

pytest --junitxml=pytest.xml $ignore $@
ret=$?

if [ "${WITHKERBEROS}" = "YES" ]; then
    (cd kerberos-server && sudo docker compose stop || exit 0)
fi
exit $ret
